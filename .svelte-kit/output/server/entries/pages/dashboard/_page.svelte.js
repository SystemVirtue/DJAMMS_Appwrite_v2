import { c as create_ssr_component, v as validate_component, a as subscribe, o as onDestroy, e as escape, b as add_attribute, m as missing_component, d as each } from "../../../chunks/ssr.js";
import "@sveltejs/kit/internal";
import "../../../chunks/exports.js";
import "../../../chunks/utils.js";
import "../../../chunks/state.svelte.js";
import { d as djammsStore, p as playerStatus } from "../../../chunks/djamms.js";
import { g as getDJAMMSService } from "../../../chunks/serviceInit.js";
import "../../../chunks/appwrite.js";
import { I as InstanceIds } from "../../../chunks/idGenerator.js";
import { L as List_music, D as Database, P as Palette, S as Save, R as Rotate_ccw } from "../../../chunks/save.js";
import { S as Search } from "../../../chunks/search.js";
import { I as Icon } from "../../../chunks/Icon.js";
import { P as Plus } from "../../../chunks/plus.js";
import { S as Skip_back, P as Pause, a as Skip_forward } from "../../../chunks/skip-forward.js";
import { P as Play } from "../../../chunks/play.js";
import { S as Shuffle, R as Repeat } from "../../../chunks/shuffle.js";
import { V as Volume_2 } from "../../../chunks/volume-2.js";
import { W as Wifi_off } from "../../../chunks/wifi-off.js";
import { C as Circle } from "../../../chunks/circle.js";
import "appwrite";
import { L as Library, C as Chevron_down } from "../../../chunks/library.js";
import { A as Activity, S as Server, C as Cpu, L as Log_out, a as Check_circle } from "../../../chunks/server.js";
import { W as Wifi } from "../../../chunks/wifi.js";
import { Z as Zap } from "../../../chunks/zap.js";
import { S as Settings, M as Monitor } from "../../../chunks/settings.js";
import { A as Alert_triangle } from "../../../chunks/alert-triangle.js";
import { U as Users } from "../../../chunks/users.js";
import { C as Clock } from "../../../chunks/clock.js";
const Filter = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  const iconNode = [
    [
      "polygon",
      {
        "points": "22 3 2 3 10 12.46 10 19 14 21 14 12.46 22 3"
      }
    ]
  ];
  return `${validate_component(Icon, "Icon").$$render($$result, Object.assign({}, { name: "filter" }, $$props, { iconNode }), {}, {
    default: () => {
      return `${slots.default ? slots.default({}) : ``}`;
    }
  })}`;
});
const Grid_3x3 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "M3 9h18" }],
    ["path", { "d": "M3 15h18" }],
    ["path", { "d": "M9 3v18" }],
    ["path", { "d": "M15 3v18" }]
  ];
  return `${validate_component(Icon, "Icon").$$render($$result, Object.assign({}, { name: "grid-3x3" }, $$props, { iconNode }), {}, {
    default: () => {
      return `${slots.default ? slots.default({}) : ``}`;
    }
  })}`;
});
const Home = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  const iconNode = [
    [
      "path",
      {
        "d": "m3 9 9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"
      }
    ],
    ["polyline", { "points": "9 22 9 12 15 12 15 22" }]
  ];
  return `${validate_component(Icon, "Icon").$$render($$result, Object.assign({}, { name: "home" }, $$props, { iconNode }), {}, {
    default: () => {
      return `${slots.default ? slots.default({}) : ``}`;
    }
  })}`;
});
const List = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  const iconNode = [
    [
      "line",
      {
        "x1": "8",
        "x2": "21",
        "y1": "6",
        "y2": "6"
      }
    ],
    [
      "line",
      {
        "x1": "8",
        "x2": "21",
        "y1": "12",
        "y2": "12"
      }
    ],
    [
      "line",
      {
        "x1": "8",
        "x2": "21",
        "y1": "18",
        "y2": "18"
      }
    ],
    [
      "line",
      {
        "x1": "3",
        "x2": "3.01",
        "y1": "6",
        "y2": "6"
      }
    ],
    [
      "line",
      {
        "x1": "3",
        "x2": "3.01",
        "y1": "12",
        "y2": "12"
      }
    ],
    [
      "line",
      {
        "x1": "3",
        "x2": "3.01",
        "y1": "18",
        "y2": "18"
      }
    ]
  ];
  return `${validate_component(Icon, "Icon").$$render($$result, Object.assign({}, { name: "list" }, $$props, { iconNode }), {}, {
    default: () => {
      return `${slots.default ? slots.default({}) : ``}`;
    }
  })}`;
});
const Shield = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  const iconNode = [
    [
      "path",
      {
        "d": "M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z"
      }
    ]
  ];
  return `${validate_component(Icon, "Icon").$$render($$result, Object.assign({}, { name: "shield" }, $$props, { iconNode }), {}, {
    default: () => {
      return `${slots.default ? slots.default({}) : ``}`;
    }
  })}`;
});
const X = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  const iconNode = [["path", { "d": "M18 6 6 18" }], ["path", { "d": "m6 6 12 12" }]];
  return `${validate_component(Icon, "Icon").$$render($$result, Object.assign({}, { name: "x" }, $$props, { iconNode }), {}, {
    default: () => {
      return `${slots.default ? slots.default({}) : ``}`;
    }
  })}`;
});
const css$2 = {
  code: ".status-indicator.svelte-1y3n08{display:flex;align-items:center;gap:0.5rem;padding:0.75rem 0.5rem;border-radius:0.5rem;font-size:0.875rem;font-weight:500}.status-connected-playing.svelte-1y3n08{background-color:rgba(34, 197, 94, 0.2);color:rgb(74, 222, 128);border:1px solid rgba(34, 197, 94, 0.3)}.status-connected-paused.svelte-1y3n08{background-color:rgba(245, 158, 11, 0.2);color:rgb(250, 204, 21);border:1px solid rgba(245, 158, 11, 0.3)}.status-disconnected.svelte-1y3n08{background-color:rgba(239, 68, 68, 0.2);color:rgb(248, 113, 113);border:1px solid rgba(239, 68, 68, 0.3)}.status-error.svelte-1y3n08{background-color:rgba(239, 68, 68, 0.2);color:rgb(248, 113, 113);border:1px solid rgba(239, 68, 68, 0.3)}.slider.svelte-1y3n08::-webkit-slider-thumb{-webkit-appearance:none;appearance:none;width:1rem;height:1rem;background-color:rgb(147, 51, 234);border-radius:9999px;cursor:pointer}.slider.svelte-1y3n08::-moz-range-thumb{width:1rem;height:1rem;background-color:rgb(147, 51, 234);border-radius:9999px;cursor:pointer;border:0}",
  map: `{"version":3,"file":"QueueManagerTab.svelte","sources":["QueueManagerTab.svelte"],"sourcesContent":["<!-- Queue Manager Tab Component - Embedded version of /queuemanager -->\\n<script lang=\\"ts\\">import { onMount, onDestroy } from \\"svelte\\";\\nimport { djammsStore } from \\"$lib/stores/djamms\\";\\nimport { currentTrack, playerControls, queueInfo } from \\"$lib/stores/djamms\\";\\nimport { browser } from \\"$app/environment\\";\\nimport { InstanceIds } from \\"$lib/utils/idGenerator\\";\\nimport {\\n  ListMusic,\\n  Play,\\n  Pause,\\n  SkipForward,\\n  SkipBack,\\n  Volume2,\\n  Shuffle,\\n  Repeat,\\n  MoreHorizontal,\\n  GripVertical,\\n  X,\\n  Plus,\\n  Search,\\n  Filter,\\n  Circle,\\n  Wifi,\\n  WifiOff,\\n  AlertTriangle,\\n  Heart\\n} from \\"lucide-svelte\\";\\nlet instanceId = InstanceIds.queueManagerTab();\\nlet queue = [];\\nlet isLoading = true;\\nlet error = null;\\nlet globalDefaultPlaylist = null;\\nlet searchQuery = \\"\\";\\nlet volume = 75;\\nlet isShuffleOn = false;\\nlet repeatMode = \\"none\\";\\nlet showVolumeSlider = false;\\nlet draggedIndex = null;\\nlet dropIndicatorIndex = null;\\n$: currentPlaylistName = $djammsStore.currentPlaylist?.name || \\"No Active Playlist\\";\\n$: filteredQueue = $djammsStore.activeQueue.filter(\\n  (track) => track.title.toLowerCase().includes(searchQuery.toLowerCase()) || track.channelTitle?.toLowerCase().includes(searchQuery.toLowerCase())\\n);\\nasync function loadQueue() {\\n  isLoading = true;\\n  error = null;\\n  try {\\n    queue = $djammsStore.activeQueue || [];\\n    console.log(\`\\\\u{1F3B5} Queue Manager Tab: Loaded \${queue.length} tracks from active queue\`);\\n  } catch (err) {\\n    console.error(\\"\\\\u{1F3B5} Queue Manager Tab: Error loading queue:\\", err);\\n    error = err instanceof Error ? err.message : \\"Failed to load queue\\";\\n    queue = [];\\n  } finally {\\n    isLoading = false;\\n  }\\n}\\nfunction getStatusDisplay(status) {\\n  switch (status) {\\n    case \\"playing\\":\\n      return { icon: Circle, text: \\"CONNECTED (LOCAL), PLAYING\\", class: \\"status-connected-playing\\" };\\n    case \\"paused\\":\\n      return { icon: Circle, text: \\"CONNECTED (LOCAL), PAUSED\\", class: \\"status-connected-paused\\" };\\n    case \\"idle\\":\\n      return { icon: WifiOff, text: \\"IDLE\\", class: \\"status-disconnected\\" };\\n    case \\"stopped\\":\\n      return { icon: WifiOff, text: \\"STOPPED\\", class: \\"status-disconnected\\" };\\n    default:\\n      return { icon: WifiOff, text: \\"NO CONNECTED PLAYER\\", class: \\"status-disconnected\\" };\\n  }\\n}\\nfunction toggleShuffle() {\\n  isShuffleOn = !isShuffleOn;\\n  console.log(\\"\\\\u{1F3B5} Queue Manager Tab: Shuffle toggled:\\", isShuffleOn);\\n}\\nfunction toggleRepeat() {\\n  const modes = [\\"none\\", \\"one\\", \\"all\\"];\\n  const currentIndex = modes.indexOf(repeatMode);\\n  repeatMode = modes[(currentIndex + 1) % modes.length];\\n  console.log(\\"\\\\u{1F3B5} Queue Manager Tab: Repeat mode changed to:\\", repeatMode);\\n}\\nfunction formatDuration(seconds) {\\n  const minutes = Math.floor(seconds / 60);\\n  const remainingSeconds = seconds % 60;\\n  return \`\${minutes}:\${remainingSeconds.toString().padStart(2, \\"0\\")}\`;\\n}\\nfunction handleDragStart(event, index) {\\n  draggedIndex = index;\\n  if (event.dataTransfer) {\\n    event.dataTransfer.effectAllowed = \\"move\\";\\n    event.dataTransfer.setData(\\"text/html\\", \\"\\");\\n  }\\n}\\nfunction handleDragOver(event, index) {\\n  event.preventDefault();\\n  if (event.dataTransfer) {\\n    event.dataTransfer.dropEffect = \\"move\\";\\n  }\\n  dropIndicatorIndex = index;\\n}\\nfunction handleDragLeave() {\\n  dropIndicatorIndex = null;\\n}\\nfunction handleDrop(event, dropIndex) {\\n  event.preventDefault();\\n  if (draggedIndex !== null && draggedIndex !== dropIndex) {\\n    const draggedTrack = queue[draggedIndex];\\n    const newQueue = [...queue];\\n    newQueue.splice(draggedIndex, 1);\\n    const insertIndex = draggedIndex < dropIndex ? dropIndex - 1 : dropIndex;\\n    newQueue.splice(insertIndex, 0, draggedTrack);\\n    queue = newQueue;\\n    console.log(\\"\\\\u{1F3B5} Queue Manager Tab: Moved track from\\", draggedIndex, \\"to\\", insertIndex);\\n  }\\n  draggedIndex = null;\\n  dropIndicatorIndex = null;\\n}\\nfunction handleDragEnd() {\\n  draggedIndex = null;\\n  dropIndicatorIndex = null;\\n}\\nonMount(() => {\\n  console.log(\\"\\\\u{1F3B5} Queue Manager Tab: Component mounted with instance ID:\\", instanceId);\\n  loadQueue();\\n  const unsubscribe = djammsStore.subscribe((state) => {\\n    if (state.activeQueue) {\\n      console.log(\\"\\\\u{1F3B5} Queue Manager Tab: Active queue changed, reloading...\\");\\n      loadQueue();\\n    }\\n  });\\n  return unsubscribe;\\n});\\nonDestroy(() => {\\n  console.log(\\"\\\\u{1F3B5} Queue Manager Tab: Component destroyed\\");\\n});\\n<\/script>\\n\\n<div class=\\"h-full flex flex-col bg-gradient-to-br from-youtube-dark via-youtube-darker to-music-purple\\">\\n\\t<!-- Queue Manager Header -->\\n\\t<div class=\\"p-6 glass-morphism border-b border-white/10\\">\\n\\t\\t<div class=\\"flex items-center justify-between mb-6\\">\\n\\t\\t\\t<div class=\\"flex items-center gap-4\\">\\n\\t\\t\\t\\t<div class=\\"w-12 h-12 bg-gradient-to-br from-music-purple to-purple-700 rounded-xl flex items-center justify-center\\">\\n\\t\\t\\t\\t\\t<ListMusic class=\\"w-6 h-6 text-white\\" />\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t<h1 class=\\"text-2xl font-bold text-white\\">Queue Manager</h1>\\n\\t\\t\\t\\t\\t<p class=\\"text-gray-400\\">Active Playlist: {currentPlaylistName}</p>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<!-- Player Status -->\\n\\t\\t\\t{#if $djammsStore.playerState?.status}\\n\\t\\t\\t\\t{@const statusDisplay = getStatusDisplay($djammsStore.playerState.status)}\\n\\t\\t\\t\\t<div class=\\"status-indicator {statusDisplay.class}\\">\\n\\t\\t\\t\\t\\t<svelte:component this={statusDisplay.icon} class=\\"w-4 h-4\\" />\\n\\t\\t\\t\\t\\t<span class=\\"text-sm\\">{statusDisplay.text}</span>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t{/if}\\n\\t\\t</div>\\n\\n\\t\\t<!-- Search and Controls -->\\n\\t\\t<div class=\\"flex items-center gap-4 mb-4\\">\\n\\t\\t\\t<!-- Search -->\\n\\t\\t\\t<div class=\\"flex-1 relative\\">\\n\\t\\t\\t\\t<Search class=\\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\\" />\\n\\t\\t\\t\\t<input\\n\\t\\t\\t\\t\\ttype=\\"text\\"\\n\\t\\t\\t\\t\\tplaceholder=\\"Search queue...\\"\\n\\t\\t\\t\\t\\tbind:value={searchQuery}\\n\\t\\t\\t\\t\\tclass=\\"w-full pl-10 pr-4 py-2 bg-black/30 border border-white/20 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-music-purple\\"\\n\\t\\t\\t\\t>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<!-- Filter Button -->\\n\\t\\t\\t<button class=\\"p-2 bg-black/30 hover:bg-black/50 border border-white/20 rounded-lg text-gray-400 hover:text-white transition-colors\\">\\n\\t\\t\\t\\t<Filter class=\\"w-4 h-4\\" />\\n\\t\\t\\t</button>\\n\\n\\t\\t\\t<!-- Add Track Button -->\\n\\t\\t\\t<button class=\\"flex items-center gap-2 px-4 py-2 bg-music-purple hover:bg-music-purple/80 rounded-lg text-white transition-colors\\">\\n\\t\\t\\t\\t<Plus class=\\"w-4 h-4\\" />\\n\\t\\t\\t\\t<span class=\\"hidden sm:inline\\">Add</span>\\n\\t\\t\\t</button>\\n\\t\\t</div>\\n\\n\\t\\t<!-- Playback Controls -->\\n\\t\\t<div class=\\"flex items-center justify-between\\">\\n\\t\\t\\t<div class=\\"flex items-center gap-4\\">\\n\\t\\t\\t\\t<!-- Previous -->\\n\\t\\t\\t\\t<button class=\\"p-2 bg-black/30 hover:bg-black/50 border border-white/20 rounded-lg text-gray-400 hover:text-white transition-colors\\">\\n\\t\\t\\t\\t\\t<SkipBack class=\\"w-5 h-5\\" />\\n\\t\\t\\t\\t</button>\\n\\n\\t\\t\\t\\t<!-- Play/Pause -->\\n\\t\\t\\t\\t<button class=\\"p-3 bg-youtube-red hover:bg-red-600 rounded-xl text-white transition-colors\\">\\n\\t\\t\\t\\t\\t{#if $djammsStore.playerState?.status === 'playing'}\\n\\t\\t\\t\\t\\t\\t<Pause class=\\"w-6 h-6\\" />\\n\\t\\t\\t\\t\\t{:else}\\n\\t\\t\\t\\t\\t\\t<Play class=\\"w-6 h-6\\" />\\n\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t</button>\\n\\n\\t\\t\\t\\t<!-- Next -->\\n\\t\\t\\t\\t<button class=\\"p-2 bg-black/30 hover:bg-black/50 border border-white/20 rounded-lg text-gray-400 hover:text-white transition-colors\\">\\n\\t\\t\\t\\t\\t<SkipForward class=\\"w-5 h-5\\" />\\n\\t\\t\\t\\t</button>\\n\\n\\t\\t\\t\\t<!-- Shuffle -->\\n\\t\\t\\t\\t<button \\n\\t\\t\\t\\t\\ton:click={toggleShuffle}\\n\\t\\t\\t\\t\\tclass=\\"p-2 border border-white/20 rounded-lg transition-colors {isShuffleOn ? 'bg-music-purple text-white' : 'bg-black/30 hover:bg-black/50 text-gray-400 hover:text-white'}\\"\\n\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t<Shuffle class=\\"w-4 h-4\\" />\\n\\t\\t\\t\\t</button>\\n\\n\\t\\t\\t\\t<!-- Repeat -->\\n\\t\\t\\t\\t<button \\n\\t\\t\\t\\t\\ton:click={toggleRepeat}\\n\\t\\t\\t\\t\\tclass=\\"p-2 border border-white/20 rounded-lg transition-colors {repeatMode !== 'none' ? 'bg-music-purple text-white' : 'bg-black/30 hover:bg-black/50 text-gray-400 hover:text-white'}\\"\\n\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t<Repeat class=\\"w-4 h-4\\" />\\n\\t\\t\\t\\t\\t{#if repeatMode === 'one'}\\n\\t\\t\\t\\t\\t\\t<span class=\\"absolute -top-1 -right-1 w-3 h-3 bg-music-purple rounded-full flex items-center justify-center text-xs\\">1</span>\\n\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<!-- Volume Control -->\\n\\t\\t\\t<div class=\\"flex items-center gap-2 relative\\">\\n\\t\\t\\t\\t<button \\n\\t\\t\\t\\t\\ton:click={() => showVolumeSlider = !showVolumeSlider}\\n\\t\\t\\t\\t\\tclass=\\"p-2 bg-black/30 hover:bg-black/50 border border-white/20 rounded-lg text-gray-400 hover:text-white transition-colors\\"\\n\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t<Volume2 class=\\"w-4 h-4\\" />\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t{#if showVolumeSlider}\\n\\t\\t\\t\\t\\t<div class=\\"absolute right-0 bottom-full mb-2 p-3 bg-black/90 border border-white/20 rounded-lg\\">\\n\\t\\t\\t\\t\\t\\t<input\\n\\t\\t\\t\\t\\t\\t\\ttype=\\"range\\"\\n\\t\\t\\t\\t\\t\\t\\tmin=\\"0\\"\\n\\t\\t\\t\\t\\t\\t\\tmax=\\"100\\"\\n\\t\\t\\t\\t\\t\\t\\tbind:value={volume}\\n\\t\\t\\t\\t\\t\\t\\tclass=\\"w-20 h-2 bg-gray-700 rounded-lg appearance-none cursor-pointer slider\\"\\n\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t<div class=\\"text-center text-xs text-gray-400 mt-1\\">{volume}%</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t{/if}\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<!-- Queue List -->\\n\\t<div class=\\"flex-1 overflow-auto\\">\\n\\t\\t{#if isLoading}\\n\\t\\t\\t<div class=\\"flex items-center justify-center h-full\\">\\n\\t\\t\\t\\t<div class=\\"text-center\\">\\n\\t\\t\\t\\t\\t<div class=\\"w-8 h-8 border-4 border-music-purple border-t-transparent rounded-full animate-spin mx-auto mb-4\\"></div>\\n\\t\\t\\t\\t\\t<p class=\\"text-gray-400\\">Loading queue...</p>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t{:else if error}\\n\\t\\t\\t<div class=\\"flex items-center justify-center h-full\\">\\n\\t\\t\\t\\t<div class=\\"text-center\\">\\n\\t\\t\\t\\t\\t<AlertTriangle class=\\"w-12 h-12 text-red-500 mx-auto mb-4\\" />\\n\\t\\t\\t\\t\\t<p class=\\"text-red-400 mb-2\\">Failed to load queue</p>\\n\\t\\t\\t\\t\\t<p class=\\"text-gray-400 text-sm\\">{error}</p>\\n\\t\\t\\t\\t\\t<button \\n\\t\\t\\t\\t\\t\\ton:click={loadQueue}\\n\\t\\t\\t\\t\\t\\tclass=\\"mt-4 px-4 py-2 bg-music-purple hover:bg-music-purple/80 rounded-lg text-white transition-colors\\"\\n\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\tTry Again\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t{:else if filteredQueue.length === 0}\\n\\t\\t\\t<div class=\\"flex items-center justify-center h-full\\">\\n\\t\\t\\t\\t<div class=\\"text-center\\">\\n\\t\\t\\t\\t\\t<ListMusic class=\\"w-12 h-12 text-gray-500 mx-auto mb-4\\" />\\n\\t\\t\\t\\t\\t<p class=\\"text-gray-400 mb-2\\">\\n\\t\\t\\t\\t\\t\\t{searchQuery ? 'No tracks match your search' : 'No tracks in queue'}\\n\\t\\t\\t\\t\\t</p>\\n\\t\\t\\t\\t\\t{#if searchQuery}\\n\\t\\t\\t\\t\\t\\t<button \\n\\t\\t\\t\\t\\t\\t\\ton:click={() => searchQuery = ''}\\n\\t\\t\\t\\t\\t\\t\\tclass=\\"text-music-purple hover:text-music-purple/80 transition-colors\\"\\n\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\tClear search\\n\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t{:else}\\n\\t\\t\\t<div class=\\"p-6\\">\\n\\t\\t\\t\\t<div class=\\"space-y-2\\">\\n\\t\\t\\t\\t\\t{#each filteredQueue as track, index (track.video_id)}\\n\\t\\t\\t\\t\\t\\t<div\\n\\t\\t\\t\\t\\t\\t\\tclass=\\"group relative p-4 glass-morphism rounded-xl border border-white/10 hover:border-music-purple/50 transition-all duration-300 cursor-pointer\\"\\n\\t\\t\\t\\t\\t\\t\\tclass:opacity-50={draggedIndex === index}\\n\\t\\t\\t\\t\\t\\t\\tclass:border-music-purple={dropIndicatorIndex === index}\\n\\t\\t\\t\\t\\t\\t\\trole=\\"button\\"\\n\\t\\t\\t\\t\\t\\t\\taria-label=\\"Queue item: {track.title}. Drag to reorder.\\"\\n\\t\\t\\t\\t\\t\\t\\ttabindex=\\"0\\"\\n\\t\\t\\t\\t\\t\\t\\tdraggable=\\"true\\"\\n\\t\\t\\t\\t\\t\\t\\ton:dragstart={(event) => handleDragStart(event, index)}\\n\\t\\t\\t\\t\\t\\t\\ton:dragover={(event) => handleDragOver(event, index)}\\n\\t\\t\\t\\t\\t\\t\\ton:dragleave={handleDragLeave}\\n\\t\\t\\t\\t\\t\\t\\ton:drop={(event) => handleDrop(event, index)}\\n\\t\\t\\t\\t\\t\\t\\ton:dragend={handleDragEnd}\\n\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t<!-- Drop indicator -->\\n\\t\\t\\t\\t\\t\\t\\t{#if dropIndicatorIndex === index}\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\"absolute -top-1 left-0 right-0 h-0.5 bg-music-purple rounded-full\\"></div>\\n\\t\\t\\t\\t\\t\\t\\t{/if}\\n\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\"flex items-center gap-4\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<!-- Drag Handle -->\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\"drag-handle text-gray-500 hover:text-gray-300 cursor-grab active:cursor-grabbing\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<GripVertical class=\\"w-4 h-4\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<!-- Track Number -->\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\"w-8 text-center text-sm text-gray-400 font-mono\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{index + 1}\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<!-- Thumbnail -->\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\"w-12 h-12 rounded-lg overflow-hidden bg-black/30 flex-shrink-0\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{#if track.thumbnail}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<img\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tsrc={track.thumbnail}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\talt={track.title}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\"w-full h-full object-cover\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tloading=\\"lazy\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{:else}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\"w-full h-full flex items-center justify-center\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ListMusic class=\\"w-6 h-6 text-gray-500\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<!-- Track Info -->\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\"flex-1 min-w-0\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<h3 class=\\"text-white font-medium truncate group-hover:text-music-purple transition-colors\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{track.title}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</h3>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\"text-gray-400 text-sm truncate\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{track.channelTitle || 'Unknown Artist'}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</p>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<!-- Duration -->\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\"text-sm text-gray-400 font-mono\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{track.duration ? formatDuration(track.duration) : '--:--'}\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<!-- Actions -->\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\"flex items-center gap-2 opacity-0 group-hover:opacity-100 transition-opacity\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\"p-1.5 hover:bg-white/10 rounded-lg text-gray-400 hover:text-white transition-colors\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<Heart class=\\"w-4 h-4\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\"p-1.5 hover:bg-white/10 rounded-lg text-gray-400 hover:text-white transition-colors\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<MoreHorizontal class=\\"w-4 h-4\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\"p-1.5 hover:bg-white/10 rounded-lg text-gray-400 hover:text-red-400 transition-colors\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<X class=\\"w-4 h-4\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t{/each}\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t{/if}\\n\\t</div>\\n\\n\\t<!-- Queue Stats Footer -->\\n\\t<div class=\\"p-4 border-t border-white/10 glass-morphism\\">\\n\\t\\t<div class=\\"flex items-center justify-between text-sm text-gray-400\\">\\n\\t\\t\\t<span>{filteredQueue.length} tracks in queue</span>\\n\\t\\t\\t<span>Total: {filteredQueue.reduce((sum, track) => sum + (track.duration || 0), 0)} seconds</span>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\\n<style>\\n\\t.status-indicator {\\n\\t\\tdisplay: flex;\\n\\t\\talign-items: center;\\n\\t\\tgap: 0.5rem;\\n\\t\\tpadding: 0.75rem 0.5rem;\\n\\t\\tborder-radius: 0.5rem;\\n\\t\\tfont-size: 0.875rem;\\n\\t\\tfont-weight: 500;\\n\\t}\\n\\t\\n\\t.status-connected-playing {\\n\\t\\tbackground-color: rgba(34, 197, 94, 0.2);\\n\\t\\tcolor: rgb(74, 222, 128);\\n\\t\\tborder: 1px solid rgba(34, 197, 94, 0.3);\\n\\t}\\n\\t\\n\\t.status-connected-paused {\\n\\t\\tbackground-color: rgba(245, 158, 11, 0.2);\\n\\t\\tcolor: rgb(250, 204, 21);\\n\\t\\tborder: 1px solid rgba(245, 158, 11, 0.3);\\n\\t}\\n\\t\\n\\t.status-disconnected {\\n\\t\\tbackground-color: rgba(239, 68, 68, 0.2);\\n\\t\\tcolor: rgb(248, 113, 113);\\n\\t\\tborder: 1px solid rgba(239, 68, 68, 0.3);\\n\\t}\\n\\t\\n\\t.status-error {\\n\\t\\tbackground-color: rgba(239, 68, 68, 0.2);\\n\\t\\tcolor: rgb(248, 113, 113);\\n\\t\\tborder: 1px solid rgba(239, 68, 68, 0.3);\\n\\t}\\n\\n\\t.slider::-webkit-slider-thumb {\\n\\t\\t-webkit-appearance: none;\\n\\t\\t        appearance: none;\\n\\t\\twidth: 1rem;\\n\\t\\theight: 1rem;\\n\\t\\tbackground-color: rgb(147, 51, 234);\\n\\t\\tborder-radius: 9999px;\\n\\t\\tcursor: pointer;\\n\\t}\\n\\t\\n\\t.slider::-moz-range-thumb {\\n\\t\\twidth: 1rem;\\n\\t\\theight: 1rem;\\n\\t\\tbackground-color: rgb(147, 51, 234);\\n\\t\\tborder-radius: 9999px;\\n\\t\\tcursor: pointer;\\n\\t\\tborder: 0;\\n\\t}\\n</style>"],"names":[],"mappings":"AAsYC,+BAAkB,CACjB,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,GAAG,CAAE,MAAM,CACX,OAAO,CAAE,OAAO,CAAC,MAAM,CACvB,aAAa,CAAE,MAAM,CACrB,SAAS,CAAE,QAAQ,CACnB,WAAW,CAAE,GACd,CAEA,uCAA0B,CACzB,gBAAgB,CAAE,KAAK,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CACxC,KAAK,CAAE,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACxB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CACxC,CAEA,sCAAyB,CACxB,gBAAgB,CAAE,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CACzC,KAAK,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CACxB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CACzC,CAEA,kCAAqB,CACpB,gBAAgB,CAAE,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CACxC,KAAK,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACzB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CACxC,CAEA,2BAAc,CACb,gBAAgB,CAAE,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CACxC,KAAK,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACzB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CACxC,CAEA,qBAAO,sBAAuB,CAC7B,kBAAkB,CAAE,IAAI,CAChB,UAAU,CAAE,IAAI,CACxB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,gBAAgB,CAAE,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CACnC,aAAa,CAAE,MAAM,CACrB,MAAM,CAAE,OACT,CAEA,qBAAO,kBAAmB,CACzB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,gBAAgB,CAAE,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CACnC,aAAa,CAAE,MAAM,CACrB,MAAM,CAAE,OAAO,CACf,MAAM,CAAE,CACT"}`
};
const QueueManagerTab = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let currentPlaylistName;
  let filteredQueue;
  let $djammsStore, $$unsubscribe_djammsStore;
  $$unsubscribe_djammsStore = subscribe(djammsStore, (value) => $djammsStore = value);
  InstanceIds.queueManagerTab();
  let searchQuery = "";
  function getStatusDisplay(status) {
    switch (status) {
      case "playing":
        return {
          icon: Circle,
          text: "CONNECTED (LOCAL), PLAYING",
          class: "status-connected-playing"
        };
      case "paused":
        return {
          icon: Circle,
          text: "CONNECTED (LOCAL), PAUSED",
          class: "status-connected-paused"
        };
      case "idle":
        return {
          icon: Wifi_off,
          text: "IDLE",
          class: "status-disconnected"
        };
      case "stopped":
        return {
          icon: Wifi_off,
          text: "STOPPED",
          class: "status-disconnected"
        };
      default:
        return {
          icon: Wifi_off,
          text: "NO CONNECTED PLAYER",
          class: "status-disconnected"
        };
    }
  }
  onDestroy(() => {
    console.log("🎵 Queue Manager Tab: Component destroyed");
  });
  $$result.css.add(css$2);
  currentPlaylistName = $djammsStore.currentPlaylist?.name || "No Active Playlist";
  filteredQueue = $djammsStore.activeQueue.filter((track) => track.title.toLowerCase().includes(searchQuery.toLowerCase()) || track.channelTitle?.toLowerCase().includes(searchQuery.toLowerCase()));
  $$unsubscribe_djammsStore();
  return `  <div class="h-full flex flex-col bg-gradient-to-br from-youtube-dark via-youtube-darker to-music-purple"> <div class="p-6 glass-morphism border-b border-white/10"><div class="flex items-center justify-between mb-6"><div class="flex items-center gap-4"><div class="w-12 h-12 bg-gradient-to-br from-music-purple to-purple-700 rounded-xl flex items-center justify-center">${validate_component(List_music, "ListMusic").$$render($$result, { class: "w-6 h-6 text-white" }, {}, {})}</div> <div><h1 class="text-2xl font-bold text-white" data-svelte-h="svelte-1e0c5fv">Queue Manager</h1> <p class="text-gray-400">Active Playlist: ${escape(currentPlaylistName)}</p></div></div>  ${$djammsStore.playerState?.status ? (() => {
    let statusDisplay = getStatusDisplay($djammsStore.playerState.status);
    return ` <div class="${"status-indicator " + escape(statusDisplay.class, true) + " svelte-1y3n08"}">${validate_component(statusDisplay.icon || missing_component, "svelte:component").$$render($$result, { class: "w-4 h-4" }, {}, {})} <span class="text-sm">${escape(statusDisplay.text)}</span></div>`;
  })() : ``}</div>  <div class="flex items-center gap-4 mb-4"> <div class="flex-1 relative">${validate_component(Search, "Search").$$render(
    $$result,
    {
      class: "absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400"
    },
    {},
    {}
  )} <input type="text" placeholder="Search queue..." class="w-full pl-10 pr-4 py-2 bg-black/30 border border-white/20 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-music-purple"${add_attribute("value", searchQuery, 0)}></div>  <button class="p-2 bg-black/30 hover:bg-black/50 border border-white/20 rounded-lg text-gray-400 hover:text-white transition-colors">${validate_component(Filter, "Filter").$$render($$result, { class: "w-4 h-4" }, {}, {})}</button>  <button class="flex items-center gap-2 px-4 py-2 bg-music-purple hover:bg-music-purple/80 rounded-lg text-white transition-colors">${validate_component(Plus, "Plus").$$render($$result, { class: "w-4 h-4" }, {}, {})} <span class="hidden sm:inline" data-svelte-h="svelte-1uo18ef">Add</span></button></div>  <div class="flex items-center justify-between"><div class="flex items-center gap-4"> <button class="p-2 bg-black/30 hover:bg-black/50 border border-white/20 rounded-lg text-gray-400 hover:text-white transition-colors">${validate_component(Skip_back, "SkipBack").$$render($$result, { class: "w-5 h-5" }, {}, {})}</button>  <button class="p-3 bg-youtube-red hover:bg-red-600 rounded-xl text-white transition-colors">${$djammsStore.playerState?.status === "playing" ? `${validate_component(Pause, "Pause").$$render($$result, { class: "w-6 h-6" }, {}, {})}` : `${validate_component(Play, "Play").$$render($$result, { class: "w-6 h-6" }, {}, {})}`}</button>  <button class="p-2 bg-black/30 hover:bg-black/50 border border-white/20 rounded-lg text-gray-400 hover:text-white transition-colors">${validate_component(Skip_forward, "SkipForward").$$render($$result, { class: "w-5 h-5" }, {}, {})}</button>  <button class="${"p-2 border border-white/20 rounded-lg transition-colors " + escape(
    "bg-black/30 hover:bg-black/50 text-gray-400 hover:text-white",
    true
  )}">${validate_component(Shuffle, "Shuffle").$$render($$result, { class: "w-4 h-4" }, {}, {})}</button>  <button class="${"p-2 border border-white/20 rounded-lg transition-colors " + escape(
    "bg-black/30 hover:bg-black/50 text-gray-400 hover:text-white",
    true
  )}">${validate_component(Repeat, "Repeat").$$render($$result, { class: "w-4 h-4" }, {}, {})} ${``}</button></div>  <div class="flex items-center gap-2 relative"><button class="p-2 bg-black/30 hover:bg-black/50 border border-white/20 rounded-lg text-gray-400 hover:text-white transition-colors">${validate_component(Volume_2, "Volume2").$$render($$result, { class: "w-4 h-4" }, {}, {})}</button> ${``}</div></div></div>  <div class="flex-1 overflow-auto">${`<div class="flex items-center justify-center h-full" data-svelte-h="svelte-wy5dzi"><div class="text-center"><div class="w-8 h-8 border-4 border-music-purple border-t-transparent rounded-full animate-spin mx-auto mb-4"></div> <p class="text-gray-400">Loading queue...</p></div></div>`}</div>  <div class="p-4 border-t border-white/10 glass-morphism"><div class="flex items-center justify-between text-sm text-gray-400"><span>${escape(filteredQueue.length)} tracks in queue</span> <span>Total: ${escape(filteredQueue.reduce((sum, track) => sum + (track.duration || 0), 0))} seconds</span></div></div> </div>`;
});
const css$1 = {
  code: ".status-indicator.svelte-k9gmwg{display:flex;align-items:center;gap:0.5rem;padding:0.75rem 0.5rem;border-radius:0.5rem;font-size:0.875rem;font-weight:500}.status-connected-playing.svelte-k9gmwg{background-color:rgba(34, 197, 94, 0.2);color:rgb(74, 222, 128);border:1px solid rgba(34, 197, 94, 0.3)}.status-connected-paused.svelte-k9gmwg{background-color:rgba(245, 158, 11, 0.2);color:rgb(250, 204, 21);border:1px solid rgba(245, 158, 11, 0.3)}.status-disconnected.svelte-k9gmwg{background-color:rgba(239, 68, 68, 0.2);color:rgb(248, 113, 113);border:1px solid rgba(239, 68, 68, 0.3)}.status-error.svelte-k9gmwg{background-color:rgba(239, 68, 68, 0.2);color:rgb(248, 113, 113);border:1px solid rgba(239, 68, 68, 0.3)}",
  map: `{"version":3,"file":"PlaylistLibraryTab.svelte","sources":["PlaylistLibraryTab.svelte"],"sourcesContent":["<!-- Playlist Library Tab Component - Embedded version of /playlistlibrary -->\\n<script lang=\\"ts\\">import { onMount, onDestroy } from \\"svelte\\";\\nimport { djammsStore } from \\"$lib/stores/djamms\\";\\nimport { playlistService } from \\"$lib/services/playlistService\\";\\nimport {\\n  Library,\\n  Plus,\\n  Search,\\n  Play,\\n  MoreHorizontal,\\n  Edit3,\\n  Trash2,\\n  Share,\\n  Download,\\n  Lock,\\n  Unlock,\\n  Music,\\n  Clock,\\n  Users,\\n  Heart,\\n  Circle,\\n  Wifi,\\n  WifiOff,\\n  AlertTriangle,\\n  Filter,\\n  ChevronDown,\\n  Grid3X3,\\n  List,\\n  Calendar,\\n  User,\\n  Cpu,\\n  HardDrive,\\n  MemoryStick,\\n  Activity,\\n  Globe,\\n  Server,\\n  Zap,\\n  Database,\\n  Timer\\n} from \\"lucide-svelte\\";\\nimport { browser } from \\"$app/environment\\";\\nlet playlists = [];\\nlet isLoading = true;\\nlet error = null;\\nlet globalDefaultPlaylist = null;\\nlet searchQuery = \\"\\";\\nlet selectedFilter = \\"all\\";\\nlet sortBy = \\"recent\\";\\nlet viewMode = \\"grid\\";\\nlet showCreateModal = false;\\nlet newPlaylistName = \\"\\";\\nlet newPlaylistDescription = \\"\\";\\nlet newPlaylistIsPublic = false;\\nlet systemResources = {\\n  // Client-side metrics (implementable)\\n  memoryUsage: { used: 0, total: 0, percentage: 0 },\\n  networkStatus: \\"unknown\\",\\n  pageLoadTime: 0,\\n  jsHeapSize: { used: 0, total: 0, limit: 0 },\\n  connectionSpeed: \\"unknown\\",\\n  websocketStatus: \\"unknown\\",\\n  // Server-side metrics (partially implementable)\\n  appwriteHealth: \\"unknown\\",\\n  apiResponseTime: 0,\\n  databaseStatus: \\"unknown\\",\\n  // System metrics (not implementable from web app)\\n  cpuUsage: \\"unable to implement / access actual CPU Usage\\",\\n  serverMemory: \\"unable to implement / access server memory\\",\\n  diskSpace: \\"unable to implement / access disk space\\",\\n  systemLoad: \\"unable to implement / access system load\\"\\n};\\nlet systemResourcesInterval;\\n$: filteredPlaylists = $djammsStore.playlists.filter((playlist) => {\\n  if (searchQuery) {\\n    const query = searchQuery.toLowerCase();\\n    if (!playlist.name.toLowerCase().includes(query) && !playlist.description?.toLowerCase().includes(query)) {\\n      return false;\\n    }\\n  }\\n  switch (selectedFilter) {\\n    case \\"public\\":\\n      return playlist.isPublic;\\n    case \\"private\\":\\n      return !playlist.isPublic;\\n    case \\"liked\\":\\n      return playlist.isLiked || false;\\n    default:\\n      return true;\\n  }\\n}).sort((a, b) => {\\n  switch (sortBy) {\\n    case \\"name\\":\\n      return a.name.localeCompare(b.name);\\n    case \\"tracks\\":\\n      return (b.trackCount || 0) - (a.trackCount || 0);\\n    case \\"duration\\":\\n      return (b.totalDuration || 0) - (a.totalDuration || 0);\\n    case \\"recent\\":\\n    default:\\n      return new Date(b.updated || b.created || Date.now()).getTime() - new Date(a.updated || a.created || Date.now()).getTime();\\n  }\\n});\\nfunction getStatusDisplay(status) {\\n  switch (status) {\\n    case \\"playing\\":\\n      return { icon: Circle, text: \\"CONNECTED (LOCAL), PLAYING\\", class: \\"status-connected-playing\\" };\\n    case \\"paused\\":\\n      return { icon: Circle, text: \\"CONNECTED (LOCAL), PAUSED\\", class: \\"status-connected-paused\\" };\\n    case \\"idle\\":\\n      return { icon: WifiOff, text: \\"IDLE\\", class: \\"status-disconnected\\" };\\n    case \\"stopped\\":\\n      return { icon: WifiOff, text: \\"STOPPED\\", class: \\"status-disconnected\\" };\\n    default:\\n      return { icon: WifiOff, text: \\"NO CONNECTED PLAYER\\", class: \\"status-disconnected\\" };\\n  }\\n}\\nasync function loadPlaylists() {\\n  isLoading = true;\\n  error = null;\\n  try {\\n    console.log(\\"\\\\u{1F3B5} Playlist Library Tab: Loading user playlists...\\");\\n    await djammsStore.loadPlaylists();\\n    globalDefaultPlaylist = await playlistService.getGlobalDefaultPlaylist();\\n    console.log(\`\\\\u{1F3B5} Playlist Library Tab: Loaded playlists from store\`);\\n  } catch (err) {\\n    console.error(\\"\\\\u{1F3B5} Playlist Library Tab: Error loading playlists:\\", err);\\n    error = err instanceof Error ? err.message : \\"Failed to load playlists\\";\\n  } finally {\\n    isLoading = false;\\n  }\\n}\\nasync function createPlaylist() {\\n  if (!newPlaylistName.trim()) return;\\n  if (!$djammsStore.currentVenue) {\\n    console.error(\\"\\\\u{1F3B5} No current venue available for playlist creation\\");\\n    error = \\"Unable to create playlist: no venue selected\\";\\n    return;\\n  }\\n  try {\\n    console.log(\\"\\\\u{1F3B5} Creating new playlist:\\", newPlaylistName);\\n    const newPlaylist = await playlistService.createPlaylist(\\n      $djammsStore.currentVenue.$id,\\n      newPlaylistName.trim(),\\n      newPlaylistDescription.trim(),\\n      newPlaylistIsPublic\\n    );\\n    if (newPlaylist) {\\n      await djammsStore.loadPlaylists();\\n      newPlaylistName = \\"\\";\\n      newPlaylistDescription = \\"\\";\\n      newPlaylistIsPublic = false;\\n      showCreateModal = false;\\n      console.log(\\"\\\\u{1F3B5} Playlist created successfully:\\", newPlaylist.name);\\n    }\\n  } catch (err) {\\n    console.error(\\"\\\\u{1F3B5} Error creating playlist:\\", err);\\n    error = err instanceof Error ? err.message : \\"Failed to create playlist\\";\\n  }\\n}\\nasync function selectPlaylist(playlist) {\\n  try {\\n    console.log(\\"\\\\u{1F3B5} Playlist Library Tab: Selecting playlist:\\", playlist.name);\\n    djammsStore.update((state) => ({\\n      ...state,\\n      currentPlaylist: playlist\\n    }));\\n    console.log(\\"\\\\u{1F3B5} Playlist Library Tab: Active playlist set to:\\", playlist.name);\\n  } catch (err) {\\n    console.error(\\"\\\\u{1F3B5} Playlist Library Tab: Error selecting playlist:\\", err);\\n    error = err instanceof Error ? err.message : \\"Failed to select playlist\\";\\n  }\\n}\\nfunction formatDuration(seconds) {\\n  const hours = Math.floor(seconds / 3600);\\n  const minutes = Math.floor(seconds % 3600 / 60);\\n  if (hours > 0) {\\n    return \`\${hours}h \${minutes}m\`;\\n  }\\n  return \`\${minutes}m\`;\\n}\\nfunction formatDate(dateString) {\\n  const date = new Date(dateString);\\n  return date.toLocaleDateString();\\n}\\nfunction updateSystemResources() {\\n  try {\\n    if (\\"memory\\" in performance) {\\n      const memInfo = performance.memory;\\n      systemResources.memoryUsage = {\\n        used: Math.round(memInfo.usedJSHeapSize / 1024 / 1024),\\n        // MB\\n        total: Math.round(memInfo.totalJSHeapSize / 1024 / 1024),\\n        // MB\\n        percentage: Math.round(memInfo.usedJSHeapSize / memInfo.totalJSHeapSize * 100)\\n      };\\n      systemResources.jsHeapSize = {\\n        used: Math.round(memInfo.usedJSHeapSize / 1024 / 1024),\\n        total: Math.round(memInfo.totalJSHeapSize / 1024 / 1024),\\n        limit: Math.round(memInfo.jsHeapSizeLimit / 1024 / 1024)\\n      };\\n    }\\n    systemResources.networkStatus = navigator.onLine ? \\"online\\" : \\"offline\\";\\n    if (\\"connection\\" in navigator) {\\n      const conn = navigator.connection;\\n      systemResources.connectionSpeed = conn?.effectiveType || \\"unknown\\";\\n    }\\n    if (performance.timing) {\\n      systemResources.pageLoadTime = performance.timing.loadEventEnd - performance.timing.navigationStart;\\n    }\\n    systemResources.websocketStatus = $djammsStore.connectionStatus === \\"connected\\" ? \\"connected\\" : \\"disconnected\\";\\n    systemResources.appwriteHealth = $djammsStore.connectionStatus === \\"connected\\" ? \\"healthy\\" : \\"unhealthy\\";\\n    systemResources.apiResponseTime = systemResources.apiResponseTime || 0;\\n    systemResources.databaseStatus = $djammsStore.lastSync ? \\"operational\\" : \\"unknown\\";\\n  } catch (error2) {\\n    console.warn(\\"System resources monitoring error:\\", error2);\\n  }\\n}\\nonMount(() => {\\n  console.log(\\"\\\\u{1F3B5} Playlist Library Tab: Component mounted\\");\\n  loadPlaylists();\\n  updateSystemResources();\\n  systemResourcesInterval = window.setInterval(updateSystemResources, 5e3);\\n});\\nonDestroy(() => {\\n  console.log(\\"\\\\u{1F3B5} Playlist Library Tab: Component destroyed\\");\\n  if (systemResourcesInterval) {\\n    clearInterval(systemResourcesInterval);\\n  }\\n});\\n<\/script>\\n\\n<div class=\\"h-full flex flex-col bg-gradient-to-br from-youtube-dark via-youtube-darker to-music-purple\\">\\n\\t<!-- Playlist Library Header -->\\n\\t<div class=\\"p-6 glass-morphism border-b border-white/10\\">\\n\\t\\t<div class=\\"flex items-center justify-between mb-6\\">\\n\\t\\t\\t<div class=\\"flex items-center gap-4\\">\\n\\t\\t\\t\\t<div class=\\"w-12 h-12 bg-gradient-to-br from-music-pink to-pink-700 rounded-xl flex items-center justify-center\\">\\n\\t\\t\\t\\t\\t<Library class=\\"w-6 h-6 text-white\\" />\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t<h1 class=\\"text-2xl font-bold text-white\\">Playlist Library</h1>\\n\\t\\t\\t\\t\\t<p class=\\"text-gray-400\\">Manage your music collections</p>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<!-- Player Status -->\\n\\t\\t\\t{#if $djammsStore.playerState?.status}\\n\\t\\t\\t\\t{@const statusDisplay = getStatusDisplay($djammsStore.playerState.status)}\\n\\t\\t\\t\\t<div class=\\"status-indicator {statusDisplay.class}\\">\\n\\t\\t\\t\\t\\t<svelte:component this={statusDisplay.icon} class=\\"w-4 h-4\\" />\\n\\t\\t\\t\\t\\t<span class=\\"text-sm\\">{statusDisplay.text}</span>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t{/if}\\n\\t\\t</div>\\n\\n\\t\\t<!-- System Resources Status -->\\n\\t\\t<div class=\\"grid grid-cols-2 md:grid-cols-4 lg:grid-cols-6 gap-4 mb-6\\">\\n\\t\\t\\t<!-- Memory Usage -->\\n\\t\\t\\t<div class=\\"status-indicator bg-black/30 border border-white/20 rounded-lg p-3\\">\\n\\t\\t\\t\\t<Activity class=\\"w-4 h-4 text-blue-400 mb-1\\" />\\n\\t\\t\\t\\t<div class=\\"text-xs text-gray-400\\">Memory</div>\\n\\t\\t\\t\\t<div class=\\"text-sm font-semibold text-white\\">\\n\\t\\t\\t\\t\\t{systemResources.memoryUsage.used}MB / {systemResources.memoryUsage.total}MB\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\"text-xs text-gray-500\\">{systemResources.memoryUsage.percentage}%</div>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<!-- Network Status -->\\n\\t\\t\\t<div class=\\"status-indicator bg-black/30 border border-white/20 rounded-lg p-3\\">\\n\\t\\t\\t\\t<Wifi class=\\"w-4 h-4 text-green-400 mb-1\\" />\\n\\t\\t\\t\\t<div class=\\"text-xs text-gray-400\\">Network</div>\\n\\t\\t\\t\\t<div class=\\"text-sm font-semibold text-white capitalize\\">{systemResources.networkStatus}</div>\\n\\t\\t\\t\\t<div class=\\"text-xs text-gray-500\\">{systemResources.connectionSpeed}</div>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<!-- WebSocket Status -->\\n\\t\\t\\t<div class=\\"status-indicator bg-black/30 border border-white/20 rounded-lg p-3\\">\\n\\t\\t\\t\\t<Zap class=\\"w-4 h-4 text-yellow-400 mb-1\\" />\\n\\t\\t\\t\\t<div class=\\"text-xs text-gray-400\\">WebSocket</div>\\n\\t\\t\\t\\t<div class=\\"text-sm font-semibold text-white capitalize\\">{systemResources.websocketStatus}</div>\\n\\t\\t\\t\\t<div class=\\"text-xs text-gray-500\\">Real-time</div>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<!-- Appwrite Health -->\\n\\t\\t\\t<div class=\\"status-indicator bg-black/30 border border-white/20 rounded-lg p-3\\">\\n\\t\\t\\t\\t<Server class=\\"w-4 h-4 text-purple-400 mb-1\\" />\\n\\t\\t\\t\\t<div class=\\"text-xs text-gray-400\\">Appwrite</div>\\n\\t\\t\\t\\t<div class=\\"text-sm font-semibold text-white capitalize\\">{systemResources.appwriteHealth}</div>\\n\\t\\t\\t\\t<div class=\\"text-xs text-gray-500\\">Backend</div>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<!-- Database Status -->\\n\\t\\t\\t<div class=\\"status-indicator bg-black/30 border border-white/20 rounded-lg p-3\\">\\n\\t\\t\\t\\t<Database class=\\"w-4 h-4 text-orange-400 mb-1\\" />\\n\\t\\t\\t\\t<div class=\\"text-xs text-gray-400\\">Database</div>\\n\\t\\t\\t\\t<div class=\\"text-sm font-semibold text-white capitalize\\">{systemResources.databaseStatus}</div>\\n\\t\\t\\t\\t<div class=\\"text-xs text-gray-500\\">Operations</div>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<!-- CPU Usage (Unable to implement) -->\\n\\t\\t\\t<div class=\\"status-indicator bg-black/30 border border-white/20 rounded-lg p-3\\">\\n\\t\\t\\t\\t<Cpu class=\\"w-4 h-4 text-red-400 mb-1\\" />\\n\\t\\t\\t\\t<div class=\\"text-xs text-gray-400\\">CPU Usage</div>\\n\\t\\t\\t\\t<div class=\\"text-sm font-semibold text-white\\">Unable to implement</div>\\n\\t\\t\\t\\t<div class=\\"text-xs text-gray-500\\">Access actual CPU</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\n\\t\\t<!-- Controls Row -->\\n\\t\\t<div class=\\"flex items-center justify-between mb-4\\">\\n\\t\\t\\t<!-- Search and Filters -->\\n\\t\\t\\t<div class=\\"flex items-center gap-4 flex-1 max-w-2xl\\">\\n\\t\\t\\t\\t<!-- Search -->\\n\\t\\t\\t\\t<div class=\\"flex-1 relative\\">\\n\\t\\t\\t\\t\\t<Search class=\\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\\" />\\n\\t\\t\\t\\t\\t<input\\n\\t\\t\\t\\t\\t\\ttype=\\"text\\"\\n\\t\\t\\t\\t\\t\\tplaceholder=\\"Search playlists...\\"\\n\\t\\t\\t\\t\\t\\tbind:value={searchQuery}\\n\\t\\t\\t\\t\\t\\tclass=\\"w-full pl-10 pr-4 py-2 bg-black/30 border border-white/20 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-music-pink\\"\\n\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<!-- Filter Dropdown -->\\n\\t\\t\\t\\t<div class=\\"relative\\">\\n\\t\\t\\t\\t\\t<select \\n\\t\\t\\t\\t\\t\\tbind:value={selectedFilter}\\n\\t\\t\\t\\t\\t\\tclass=\\"appearance-none bg-black/30 border border-white/20 rounded-lg px-4 py-2 pr-8 text-white focus:outline-none focus:ring-2 focus:ring-music-pink\\"\\n\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t<option value=\\"all\\">All Playlists</option>\\n\\t\\t\\t\\t\\t\\t<option value=\\"public\\">Public</option>\\n\\t\\t\\t\\t\\t\\t<option value=\\"private\\">Private</option>\\n\\t\\t\\t\\t\\t\\t<option value=\\"liked\\">Liked</option>\\n\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t<ChevronDown class=\\"absolute right-2 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400 pointer-events-none\\" />\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<!-- Sort Dropdown -->\\n\\t\\t\\t\\t<div class=\\"relative\\">\\n\\t\\t\\t\\t\\t<select \\n\\t\\t\\t\\t\\t\\tbind:value={sortBy}\\n\\t\\t\\t\\t\\t\\tclass=\\"appearance-none bg-black/30 border border-white/20 rounded-lg px-4 py-2 pr-8 text-white focus:outline-none focus:ring-2 focus:ring-music-pink\\"\\n\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t<option value=\\"recent\\">Recently Updated</option>\\n\\t\\t\\t\\t\\t\\t<option value=\\"name\\">Name</option>\\n\\t\\t\\t\\t\\t\\t<option value=\\"tracks\\">Track Count</option>\\n\\t\\t\\t\\t\\t\\t<option value=\\"duration\\">Duration</option>\\n\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t<ChevronDown class=\\"absolute right-2 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400 pointer-events-none\\" />\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<!-- View Controls -->\\n\\t\\t\\t<div class=\\"flex items-center gap-2\\">\\n\\t\\t\\t\\t<!-- View Mode Toggle -->\\n\\t\\t\\t\\t<div class=\\"flex bg-black/30 border border-white/20 rounded-lg p-1\\">\\n\\t\\t\\t\\t\\t<button\\n\\t\\t\\t\\t\\t\\ton:click={() => viewMode = 'grid'}\\n\\t\\t\\t\\t\\t\\tclass=\\"p-2 rounded transition-colors {viewMode === 'grid' ? 'bg-music-pink text-white' : 'text-gray-400 hover:text-white'}\\"\\n\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t<Grid3X3 class=\\"w-4 h-4\\" />\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t<button\\n\\t\\t\\t\\t\\t\\ton:click={() => viewMode = 'list'}\\n\\t\\t\\t\\t\\t\\tclass=\\"p-2 rounded transition-colors {viewMode === 'list' ? 'bg-music-pink text-white' : 'text-gray-400 hover:text-white'}\\"\\n\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t<List class=\\"w-4 h-4\\" />\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<!-- Create Playlist Button -->\\n\\t\\t\\t\\t<button \\n\\t\\t\\t\\t\\ton:click={() => showCreateModal = true}\\n\\t\\t\\t\\t\\tclass=\\"flex items-center gap-2 px-4 py-2 bg-music-pink hover:bg-pink-600 rounded-lg text-white transition-colors\\"\\n\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t<Plus class=\\"w-4 h-4\\" />\\n\\t\\t\\t\\t\\t<span class=\\"hidden sm:inline\\">Create</span>\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\n\\t\\t<!-- Stats Row -->\\n\\t\\t<div class=\\"flex items-center gap-6 text-sm text-gray-400\\">\\n\\t\\t\\t<span>{playlists.length} total playlists</span>\\n\\t\\t\\t<span>{filteredPlaylists.length} shown</span>\\n\\t\\t\\t{#if globalDefaultPlaylist}\\n\\t\\t\\t\\t<span>Default: {globalDefaultPlaylist.name}</span>\\n\\t\\t\\t{/if}\\n\\t\\t\\t{#if $djammsStore.currentPlaylist}\\n\\t\\t\\t\\t<span class=\\"text-music-pink\\">Active: {$djammsStore.currentPlaylist.name}</span>\\n\\t\\t\\t{/if}\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<!-- Playlist Content -->\\n\\t<div class=\\"flex-1 overflow-auto\\">\\n\\t\\t{#if isLoading}\\n\\t\\t\\t<div class=\\"flex items-center justify-center h-full\\">\\n\\t\\t\\t\\t<div class=\\"text-center\\">\\n\\t\\t\\t\\t\\t<div class=\\"w-8 h-8 border-4 border-music-pink border-t-transparent rounded-full animate-spin mx-auto mb-4\\"></div>\\n\\t\\t\\t\\t\\t<p class=\\"text-gray-400\\">Loading playlists...</p>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t{:else if error}\\n\\t\\t\\t<div class=\\"flex items-center justify-center h-full\\">\\n\\t\\t\\t\\t<div class=\\"text-center\\">\\n\\t\\t\\t\\t\\t<AlertTriangle class=\\"w-12 h-12 text-red-500 mx-auto mb-4\\" />\\n\\t\\t\\t\\t\\t<p class=\\"text-red-400 mb-2\\">Failed to load playlists</p>\\n\\t\\t\\t\\t\\t<p class=\\"text-gray-400 text-sm\\">{error}</p>\\n\\t\\t\\t\\t\\t<button \\n\\t\\t\\t\\t\\t\\ton:click={loadPlaylists}\\n\\t\\t\\t\\t\\t\\tclass=\\"mt-4 px-4 py-2 bg-music-pink hover:bg-pink-600 rounded-lg text-white transition-colors\\"\\n\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\tTry Again\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t{:else if filteredPlaylists.length === 0}\\n\\t\\t\\t<div class=\\"flex items-center justify-center h-full\\">\\n\\t\\t\\t\\t<div class=\\"text-center\\">\\n\\t\\t\\t\\t\\t<Library class=\\"w-12 h-12 text-gray-500 mx-auto mb-4\\" />\\n\\t\\t\\t\\t\\t<p class=\\"text-gray-400 mb-2\\">\\n\\t\\t\\t\\t\\t\\t{searchQuery || selectedFilter !== 'all' ? 'No playlists match your criteria' : 'No playlists yet'}\\n\\t\\t\\t\\t\\t</p>\\n\\t\\t\\t\\t\\t{#if searchQuery || selectedFilter !== 'all'}\\n\\t\\t\\t\\t\\t\\t<button \\n\\t\\t\\t\\t\\t\\t\\ton:click={() => {searchQuery = ''; selectedFilter = 'all';}}\\n\\t\\t\\t\\t\\t\\t\\tclass=\\"text-music-pink hover:text-pink-400 transition-colors\\"\\n\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\tClear filters\\n\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t{:else}\\n\\t\\t\\t\\t\\t\\t<button \\n\\t\\t\\t\\t\\t\\t\\ton:click={() => showCreateModal = true}\\n\\t\\t\\t\\t\\t\\t\\tclass=\\"mt-4 px-4 py-2 bg-music-pink hover:bg-pink-600 rounded-lg text-white transition-colors\\"\\n\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\tCreate Your First Playlist\\n\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t{:else}\\n\\t\\t\\t<div class=\\"p-6\\">\\n\\t\\t\\t\\t{#if viewMode === 'grid'}\\n\\t\\t\\t\\t\\t<!-- Grid View -->\\n\\t\\t\\t\\t\\t<div class=\\"grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 2xl:grid-cols-4 gap-6\\">\\n\\t\\t\\t\\t\\t\\t{#each filteredPlaylists as playlist (playlist.id)}\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\"group glass-morphism rounded-2xl border border-white/10 hover:border-music-pink/50 transition-all duration-300 overflow-hidden\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<!-- Playlist Cover -->\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\"aspect-square bg-gradient-to-br from-music-pink/20 via-purple-500/20 to-blue-500/20 relative overflow-hidden\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{#if playlist.coverImage}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<img \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tsrc={playlist.coverImage} \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\talt={playlist.name}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\"w-full h-full object-cover\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tloading=\\"lazy\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{:else}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\"w-full h-full flex items-center justify-center\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<Library class=\\"w-16 h-16 text-white/50\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- Overlay -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\"absolute inset-0 bg-black/50 opacity-0 group-hover:opacity-100 transition-opacity flex items-center justify-center\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ton:click={() => selectPlaylist(playlist)}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\"p-4 bg-music-pink hover:bg-pink-600 rounded-full text-white transition-colors transform scale-90 group-hover:scale-100\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<Play class=\\"w-6 h-6\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- Active indicator -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{#if $djammsStore.currentPlaylist?.$id === playlist.$id}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\"absolute top-3 right-3 w-3 h-3 bg-music-pink rounded-full animate-pulse\\"></div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<!-- Playlist Info -->\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\"p-4\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\"flex items-start justify-between mb-2\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\"min-w-0 flex-1\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<h3 class=\\"font-semibold text-white truncate group-hover:text-music-pink transition-colors\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{playlist.name}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</h3>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\"text-sm text-gray-400 truncate\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{playlist.description || 'No description'}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</p>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- Playlist Menu -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\"relative\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\"p-1 text-gray-400 hover:text-white opacity-0 group-hover:opacity-100 transition-all\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<MoreHorizontal class=\\"w-4 h-4\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- Stats -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\"flex items-center gap-4 text-xs text-gray-500 mb-3\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\"flex items-center gap-1\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<Music class=\\"w-3 h-3\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{playlist.trackCount || 0} tracks\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\"flex items-center gap-1\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<Clock class=\\"w-3 h-3\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{playlist.totalDuration ? formatDuration(playlist.totalDuration) : '--'}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{#if playlist.isPublic}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\"flex items-center gap-1\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<Users class=\\"w-3 h-3\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tPublic\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{:else}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\"flex items-center gap-1\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<Lock class=\\"w-3 h-3\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tPrivate\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- Actions -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\"flex items-center justify-between\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\"text-xs text-gray-500\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{formatDate(playlist.updated || playlist.created || new Date().toISOString())}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\"flex items-center gap-1 opacity-0 group-hover:opacity-100 transition-opacity\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\"p-1.5 hover:bg-white/10 rounded text-gray-400 hover:text-white transition-colors\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<Heart class=\\"w-3 h-3\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\"p-1.5 hover:bg-white/10 rounded text-gray-400 hover:text-white transition-colors\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<Share class=\\"w-3 h-3\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\"p-1.5 hover:bg-white/10 rounded text-gray-400 hover:text-white transition-colors\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<Edit3 class=\\"w-3 h-3\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t{/each}\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t{:else}\\n\\t\\t\\t\\t\\t<!-- List View -->\\n\\t\\t\\t\\t\\t<div class=\\"space-y-2\\">\\n\\t\\t\\t\\t\\t\\t{#each filteredPlaylists as playlist (playlist.id)}\\n\\t\\t\\t\\t\\t\\t\\t<div \\n\\t\\t\\t\\t\\t\\t\\t\\tclass=\\"group p-4 glass-morphism rounded-xl border border-white/10 hover:border-music-pink/50 transition-all duration-300 cursor-pointer\\"\\n\\t\\t\\t\\t\\t\\t\\t\\trole=\\"button\\"\\n\\t\\t\\t\\t\\t\\t\\t\\ttabindex=\\"0\\"\\n\\t\\t\\t\\t\\t\\t\\t\\ton:click={() => selectPlaylist(playlist)}\\n\\t\\t\\t\\t\\t\\t\\t\\ton:keydown={(e) => {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (e.key === 'Enter' || e.key === ' ') {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\te.preventDefault();\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tselectPlaylist(playlist);\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t}}\\n\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\"flex items-center gap-4\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- Thumbnail -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\"w-16 h-16 rounded-lg overflow-hidden bg-gradient-to-br from-music-pink/20 via-purple-500/20 to-blue-500/20 flex-shrink-0 relative\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{#if playlist.coverImage}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<img \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tsrc={playlist.coverImage} \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\talt={playlist.name}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\"w-full h-full object-cover\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tloading=\\"lazy\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{:else}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\"w-full h-full flex items-center justify-center\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<Library class=\\"w-8 h-8 text-white/50\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{#if $djammsStore.currentPlaylist?.$id === playlist.$id}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\"absolute top-1 right-1 w-2 h-2 bg-music-pink rounded-full animate-pulse\\"></div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- Playlist Info -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\"flex-1 min-w-0\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<h3 class=\\"font-semibold text-white truncate group-hover:text-music-pink transition-colors\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{playlist.name}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</h3>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\"text-sm text-gray-400 truncate\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{playlist.description || 'No description'}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</p>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\"flex items-center gap-4 text-xs text-gray-500 mt-1\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span>{playlist.trackCount || 0} tracks</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span>{playlist.totalDuration ? formatDuration(playlist.totalDuration) : '--'}</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span>{playlist.isPublic ? 'Public' : 'Private'}</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- Updated Date -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\"text-sm text-gray-500\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{formatDate(playlist.updated || playlist.created || new Date().toISOString())}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- Actions -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\"flex items-center gap-2 opacity-0 group-hover:opacity-100 transition-opacity\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\"p-2 hover:bg-white/10 rounded-lg text-gray-400 hover:text-white transition-colors\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<Play class=\\"w-4 h-4\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\"p-2 hover:bg-white/10 rounded-lg text-gray-400 hover:text-white transition-colors\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<Heart class=\\"w-4 h-4\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\"p-2 hover:bg-white/10 rounded-lg text-gray-400 hover:text-white transition-colors\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<MoreHorizontal class=\\"w-4 h-4\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t{/each}\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t{/if}\\n\\t\\t\\t</div>\\n\\t\\t{/if}\\n\\t</div>\\n</div>\\n\\n<!-- Create Playlist Modal -->\\n{#if showCreateModal}\\n\\t<div class=\\"fixed inset-0 bg-black/50 flex items-center justify-center p-4 z-50\\">\\n\\t\\t<div class=\\"bg-youtube-darker border border-white/20 rounded-2xl p-6 w-full max-w-md\\">\\n\\t\\t\\t<h2 class=\\"text-xl font-bold text-white mb-4\\">Create New Playlist</h2>\\n\\t\\t\\t\\n\\t\\t\\t<form on:submit|preventDefault={createPlaylist}>\\n\\t\\t\\t\\t<div class=\\"space-y-4\\">\\n\\t\\t\\t\\t\\t<!-- Playlist Name -->\\n\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t<label for=\\"playlist-name\\" class=\\"block text-sm font-medium text-gray-300 mb-2\\">Playlist Name</label>\\n\\t\\t\\t\\t\\t\\t<input\\n\\t\\t\\t\\t\\t\\t\\tid=\\"playlist-name\\"\\n\\t\\t\\t\\t\\t\\t\\ttype=\\"text\\"\\n\\t\\t\\t\\t\\t\\t\\tbind:value={newPlaylistName}\\n\\t\\t\\t\\t\\t\\t\\tplaceholder=\\"Enter playlist name...\\"\\n\\t\\t\\t\\t\\t\\t\\tclass=\\"w-full px-3 py-2 bg-black/30 border border-white/20 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-music-pink\\"\\n\\t\\t\\t\\t\\t\\t\\trequired\\n\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<!-- Description -->\\n\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t<label for=\\"playlist-description\\" class=\\"block text-sm font-medium text-gray-300 mb-2\\">Description (Optional)</label>\\n\\t\\t\\t\\t\\t\\t<textarea\\n\\t\\t\\t\\t\\t\\t\\tid=\\"playlist-description\\"\\n\\t\\t\\t\\t\\t\\t\\tbind:value={newPlaylistDescription}\\n\\t\\t\\t\\t\\t\\t\\tplaceholder=\\"Describe your playlist...\\"\\n\\t\\t\\t\\t\\t\\t\\trows=\\"3\\"\\n\\t\\t\\t\\t\\t\\t\\tclass=\\"w-full px-3 py-2 bg-black/30 border border-white/20 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-music-pink resize-none\\"\\n\\t\\t\\t\\t\\t\\t></textarea>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<!-- Public/Private -->\\n\\t\\t\\t\\t\\t<div class=\\"flex items-center gap-3\\">\\n\\t\\t\\t\\t\\t\\t<input\\n\\t\\t\\t\\t\\t\\t\\tid=\\"playlist-public\\"\\n\\t\\t\\t\\t\\t\\t\\ttype=\\"checkbox\\"\\n\\t\\t\\t\\t\\t\\t\\tbind:checked={newPlaylistIsPublic}\\n\\t\\t\\t\\t\\t\\t\\tclass=\\"w-4 h-4 rounded border-white/20 bg-black/30 text-music-pink focus:ring-music-pink focus:ring-2\\"\\n\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t<label for=\\"playlist-public\\" class=\\"text-sm text-gray-300\\">Make this playlist public</label>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<!-- Modal Actions -->\\n\\t\\t\\t\\t<div class=\\"flex items-center gap-3 mt-6\\">\\n\\t\\t\\t\\t\\t<button\\n\\t\\t\\t\\t\\t\\ttype=\\"button\\"\\n\\t\\t\\t\\t\\t\\ton:click={() => showCreateModal = false}\\n\\t\\t\\t\\t\\t\\tclass=\\"flex-1 px-4 py-2 border border-white/20 rounded-lg text-gray-300 hover:text-white hover:bg-white/10 transition-colors\\"\\n\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\tCancel\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t<button\\n\\t\\t\\t\\t\\t\\ttype=\\"submit\\"\\n\\t\\t\\t\\t\\t\\tdisabled={!newPlaylistName.trim()}\\n\\t\\t\\t\\t\\t\\tclass=\\"flex-1 px-4 py-2 bg-music-pink hover:bg-pink-600 disabled:bg-gray-600 disabled:cursor-not-allowed rounded-lg text-white transition-colors\\"\\n\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\tCreate\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</form>\\n\\t\\t</div>\\n\\t</div>\\n{/if}\\n\\n<style>\\n\\t.status-indicator {\\n\\t\\tdisplay: flex;\\n\\t\\talign-items: center;\\n\\t\\tgap: 0.5rem;\\n\\t\\tpadding: 0.75rem 0.5rem;\\n\\t\\tborder-radius: 0.5rem;\\n\\t\\tfont-size: 0.875rem;\\n\\t\\tfont-weight: 500;\\n\\t}\\n\\t\\n\\t.status-connected-playing {\\n\\t\\tbackground-color: rgba(34, 197, 94, 0.2);\\n\\t\\tcolor: rgb(74, 222, 128);\\n\\t\\tborder: 1px solid rgba(34, 197, 94, 0.3);\\n\\t}\\n\\t\\n\\t.status-connected-paused {\\n\\t\\tbackground-color: rgba(245, 158, 11, 0.2);\\n\\t\\tcolor: rgb(250, 204, 21);\\n\\t\\tborder: 1px solid rgba(245, 158, 11, 0.3);\\n\\t}\\n\\t\\n\\t.status-disconnected {\\n\\t\\tbackground-color: rgba(239, 68, 68, 0.2);\\n\\t\\tcolor: rgb(248, 113, 113);\\n\\t\\tborder: 1px solid rgba(239, 68, 68, 0.3);\\n\\t}\\n\\t\\n\\t.status-error {\\n\\t\\tbackground-color: rgba(239, 68, 68, 0.2);\\n\\t\\tcolor: rgb(248, 113, 113);\\n\\t\\tborder: 1px solid rgba(239, 68, 68, 0.3);\\n\\t}\\n</style>"],"names":[],"mappings":"AAmrBC,+BAAkB,CACjB,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,GAAG,CAAE,MAAM,CACX,OAAO,CAAE,OAAO,CAAC,MAAM,CACvB,aAAa,CAAE,MAAM,CACrB,SAAS,CAAE,QAAQ,CACnB,WAAW,CAAE,GACd,CAEA,uCAA0B,CACzB,gBAAgB,CAAE,KAAK,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CACxC,KAAK,CAAE,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACxB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CACxC,CAEA,sCAAyB,CACxB,gBAAgB,CAAE,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CACzC,KAAK,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CACxB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CACzC,CAEA,kCAAqB,CACpB,gBAAgB,CAAE,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CACxC,KAAK,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACzB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CACxC,CAEA,2BAAc,CACb,gBAAgB,CAAE,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CACxC,KAAK,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACzB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CACxC"}`
};
const PlaylistLibraryTab = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let filteredPlaylists;
  let $djammsStore, $$unsubscribe_djammsStore;
  $$unsubscribe_djammsStore = subscribe(djammsStore, (value) => $djammsStore = value);
  let playlists = [];
  let searchQuery = "";
  let selectedFilter = "all";
  let sortBy = "recent";
  let systemResources = {
    // Client-side metrics (implementable)
    memoryUsage: { used: 0, total: 0, percentage: 0 },
    networkStatus: "unknown",
    connectionSpeed: "unknown",
    websocketStatus: "unknown",
    // Server-side metrics (partially implementable)
    appwriteHealth: "unknown",
    databaseStatus: "unknown"
  };
  function getStatusDisplay(status) {
    switch (status) {
      case "playing":
        return {
          icon: Circle,
          text: "CONNECTED (LOCAL), PLAYING",
          class: "status-connected-playing"
        };
      case "paused":
        return {
          icon: Circle,
          text: "CONNECTED (LOCAL), PAUSED",
          class: "status-connected-paused"
        };
      case "idle":
        return {
          icon: Wifi_off,
          text: "IDLE",
          class: "status-disconnected"
        };
      case "stopped":
        return {
          icon: Wifi_off,
          text: "STOPPED",
          class: "status-disconnected"
        };
      default:
        return {
          icon: Wifi_off,
          text: "NO CONNECTED PLAYER",
          class: "status-disconnected"
        };
    }
  }
  onDestroy(() => {
    console.log("🎵 Playlist Library Tab: Component destroyed");
  });
  $$result.css.add(css$1);
  filteredPlaylists = $djammsStore.playlists.filter((playlist) => {
    switch (selectedFilter) {
      case "public":
        return playlist.isPublic;
      case "private":
        return !playlist.isPublic;
      case "liked":
        return playlist.isLiked || false;
      default:
        return true;
    }
  }).sort((a, b) => {
    switch (sortBy) {
      case "name":
        return a.name.localeCompare(b.name);
      case "tracks":
        return (b.trackCount || 0) - (a.trackCount || 0);
      case "duration":
        return (b.totalDuration || 0) - (a.totalDuration || 0);
      case "recent":
      default:
        return new Date(b.updated || b.created || Date.now()).getTime() - new Date(a.updated || a.created || Date.now()).getTime();
    }
  });
  $$unsubscribe_djammsStore();
  return `  <div class="h-full flex flex-col bg-gradient-to-br from-youtube-dark via-youtube-darker to-music-purple"> <div class="p-6 glass-morphism border-b border-white/10"><div class="flex items-center justify-between mb-6"><div class="flex items-center gap-4"><div class="w-12 h-12 bg-gradient-to-br from-music-pink to-pink-700 rounded-xl flex items-center justify-center">${validate_component(Library, "Library").$$render($$result, { class: "w-6 h-6 text-white" }, {}, {})}</div> <div data-svelte-h="svelte-d3kxbd"><h1 class="text-2xl font-bold text-white">Playlist Library</h1> <p class="text-gray-400">Manage your music collections</p></div></div>  ${$djammsStore.playerState?.status ? (() => {
    let statusDisplay = getStatusDisplay($djammsStore.playerState.status);
    return ` <div class="${"status-indicator " + escape(statusDisplay.class, true) + " svelte-k9gmwg"}">${validate_component(statusDisplay.icon || missing_component, "svelte:component").$$render($$result, { class: "w-4 h-4" }, {}, {})} <span class="text-sm">${escape(statusDisplay.text)}</span></div>`;
  })() : ``}</div>  <div class="grid grid-cols-2 md:grid-cols-4 lg:grid-cols-6 gap-4 mb-6"> <div class="status-indicator bg-black/30 border border-white/20 rounded-lg p-3 svelte-k9gmwg">${validate_component(Activity, "Activity").$$render($$result, { class: "w-4 h-4 text-blue-400 mb-1" }, {}, {})} <div class="text-xs text-gray-400" data-svelte-h="svelte-1vmchet">Memory</div> <div class="text-sm font-semibold text-white">${escape(systemResources.memoryUsage.used)}MB / ${escape(systemResources.memoryUsage.total)}MB</div> <div class="text-xs text-gray-500">${escape(systemResources.memoryUsage.percentage)}%</div></div>  <div class="status-indicator bg-black/30 border border-white/20 rounded-lg p-3 svelte-k9gmwg">${validate_component(Wifi, "Wifi").$$render($$result, { class: "w-4 h-4 text-green-400 mb-1" }, {}, {})} <div class="text-xs text-gray-400" data-svelte-h="svelte-utd9vs">Network</div> <div class="text-sm font-semibold text-white capitalize">${escape(systemResources.networkStatus)}</div> <div class="text-xs text-gray-500">${escape(systemResources.connectionSpeed)}</div></div>  <div class="status-indicator bg-black/30 border border-white/20 rounded-lg p-3 svelte-k9gmwg">${validate_component(Zap, "Zap").$$render($$result, { class: "w-4 h-4 text-yellow-400 mb-1" }, {}, {})} <div class="text-xs text-gray-400" data-svelte-h="svelte-1rxqkap">WebSocket</div> <div class="text-sm font-semibold text-white capitalize">${escape(systemResources.websocketStatus)}</div> <div class="text-xs text-gray-500" data-svelte-h="svelte-1ls0jf5">Real-time</div></div>  <div class="status-indicator bg-black/30 border border-white/20 rounded-lg p-3 svelte-k9gmwg">${validate_component(Server, "Server").$$render($$result, { class: "w-4 h-4 text-purple-400 mb-1" }, {}, {})} <div class="text-xs text-gray-400" data-svelte-h="svelte-16d7tmu">Appwrite</div> <div class="text-sm font-semibold text-white capitalize">${escape(systemResources.appwriteHealth)}</div> <div class="text-xs text-gray-500" data-svelte-h="svelte-h127vj">Backend</div></div>  <div class="status-indicator bg-black/30 border border-white/20 rounded-lg p-3 svelte-k9gmwg">${validate_component(Database, "Database").$$render($$result, { class: "w-4 h-4 text-orange-400 mb-1" }, {}, {})} <div class="text-xs text-gray-400" data-svelte-h="svelte-1y9orqb">Database</div> <div class="text-sm font-semibold text-white capitalize">${escape(systemResources.databaseStatus)}</div> <div class="text-xs text-gray-500" data-svelte-h="svelte-ijzd3n">Operations</div></div>  <div class="status-indicator bg-black/30 border border-white/20 rounded-lg p-3 svelte-k9gmwg">${validate_component(Cpu, "Cpu").$$render($$result, { class: "w-4 h-4 text-red-400 mb-1" }, {}, {})} <div class="text-xs text-gray-400" data-svelte-h="svelte-1hj5f7n">CPU Usage</div> <div class="text-sm font-semibold text-white" data-svelte-h="svelte-102cn0k">Unable to implement</div> <div class="text-xs text-gray-500" data-svelte-h="svelte-1hbhc31">Access actual CPU</div></div></div>  <div class="flex items-center justify-between mb-4"> <div class="flex items-center gap-4 flex-1 max-w-2xl"> <div class="flex-1 relative">${validate_component(Search, "Search").$$render(
    $$result,
    {
      class: "absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400"
    },
    {},
    {}
  )} <input type="text" placeholder="Search playlists..." class="w-full pl-10 pr-4 py-2 bg-black/30 border border-white/20 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-music-pink"${add_attribute("value", searchQuery, 0)}></div>  <div class="relative"><select class="appearance-none bg-black/30 border border-white/20 rounded-lg px-4 py-2 pr-8 text-white focus:outline-none focus:ring-2 focus:ring-music-pink"><option value="all" data-svelte-h="svelte-4xmypx">All Playlists</option><option value="public" data-svelte-h="svelte-56kvny">Public</option><option value="private" data-svelte-h="svelte-1biwgrw">Private</option><option value="liked" data-svelte-h="svelte-a422lc">Liked</option></select> ${validate_component(Chevron_down, "ChevronDown").$$render(
    $$result,
    {
      class: "absolute right-2 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400 pointer-events-none"
    },
    {},
    {}
  )}</div>  <div class="relative"><select class="appearance-none bg-black/30 border border-white/20 rounded-lg px-4 py-2 pr-8 text-white focus:outline-none focus:ring-2 focus:ring-music-pink"><option value="recent" data-svelte-h="svelte-1r6lo8y">Recently Updated</option><option value="name" data-svelte-h="svelte-8o3xma">Name</option><option value="tracks" data-svelte-h="svelte-n1dh54">Track Count</option><option value="duration" data-svelte-h="svelte-jl9efy">Duration</option></select> ${validate_component(Chevron_down, "ChevronDown").$$render(
    $$result,
    {
      class: "absolute right-2 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400 pointer-events-none"
    },
    {},
    {}
  )}</div></div>  <div class="flex items-center gap-2"> <div class="flex bg-black/30 border border-white/20 rounded-lg p-1"><button class="${"p-2 rounded transition-colors " + escape(
    "bg-music-pink text-white",
    true
  )}">${validate_component(Grid_3x3, "Grid3X3").$$render($$result, { class: "w-4 h-4" }, {}, {})}</button> <button class="${"p-2 rounded transition-colors " + escape(
    "text-gray-400 hover:text-white",
    true
  )}">${validate_component(List, "List").$$render($$result, { class: "w-4 h-4" }, {}, {})}</button></div>  <button class="flex items-center gap-2 px-4 py-2 bg-music-pink hover:bg-pink-600 rounded-lg text-white transition-colors">${validate_component(Plus, "Plus").$$render($$result, { class: "w-4 h-4" }, {}, {})} <span class="hidden sm:inline" data-svelte-h="svelte-ysax6k">Create</span></button></div></div>  <div class="flex items-center gap-6 text-sm text-gray-400"><span>${escape(playlists.length)} total playlists</span> <span>${escape(filteredPlaylists.length)} shown</span> ${``} ${$djammsStore.currentPlaylist ? `<span class="text-music-pink">Active: ${escape($djammsStore.currentPlaylist.name)}</span>` : ``}</div></div>  <div class="flex-1 overflow-auto">${`<div class="flex items-center justify-center h-full" data-svelte-h="svelte-dy1p5c"><div class="text-center"><div class="w-8 h-8 border-4 border-music-pink border-t-transparent rounded-full animate-spin mx-auto mb-4"></div> <p class="text-gray-400">Loading playlists...</p></div></div>`}</div></div>  ${``}`;
});
const css = {
  code: ".status-indicator.svelte-14mlxud{display:flex;align-items:center;gap:0.5rem;border-radius:0.5rem;padding-left:0.75rem;padding-right:0.75rem;padding-top:0.5rem;padding-bottom:0.5rem;font-size:0.875rem;line-height:1.25rem;font-weight:500}.status-connected-playing.svelte-14mlxud{border-width:1px;border-color:rgb(34 197 94 / 0.3);background-color:rgb(34 197 94 / 0.2);--tw-text-opacity:1;color:rgb(74 222 128 / var(--tw-text-opacity, 1))}.status-connected-paused.svelte-14mlxud{border-width:1px;border-color:rgb(234 179 8 / 0.3);background-color:rgb(234 179 8 / 0.2);--tw-text-opacity:1;color:rgb(250 204 21 / var(--tw-text-opacity, 1))}.status-disconnected.svelte-14mlxud{border-width:1px;border-color:rgb(239 68 68 / 0.3);background-color:rgb(239 68 68 / 0.2);--tw-text-opacity:1;color:rgb(248 113 113 / var(--tw-text-opacity, 1))}.status-error.svelte-14mlxud{border-width:1px;border-color:rgb(239 68 68 / 0.3);background-color:rgb(239 68 68 / 0.2);--tw-text-opacity:1;color:rgb(248 113 113 / var(--tw-text-opacity, 1))}.setting-select.svelte-14mlxud{width:100%;border-radius:0.5rem;border-width:1px;border-color:rgb(255 255 255 / 0.2);background-color:rgb(0 0 0 / 0.3);padding-left:0.75rem;padding-right:0.75rem;padding-top:0.5rem;padding-bottom:0.5rem;--tw-text-opacity:1;color:rgb(255 255 255 / var(--tw-text-opacity, 1))}.setting-select.svelte-14mlxud:focus{outline:2px solid transparent;outline-offset:2px;--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);--tw-ring-opacity:1;--tw-ring-color:rgb(59 130 246 / var(--tw-ring-opacity, 1))}.toggle.svelte-14mlxud{position:relative;height:1.5rem;width:3rem;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;border-radius:9999px;--tw-bg-opacity:1;background-color:rgb(75 85 99 / var(--tw-bg-opacity, 1));transition-property:color, background-color, border-color, text-decoration-color, fill, stroke;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-duration:150ms}.toggle.svelte-14mlxud:checked{--tw-bg-opacity:1;background-color:rgb(59 130 246 / var(--tw-bg-opacity, 1))}.toggle.svelte-14mlxud::before{content:'';position:absolute;top:0.125rem;left:0.125rem;height:1.25rem;width:1.25rem;border-radius:9999px;--tw-bg-opacity:1;background-color:rgb(255 255 255 / var(--tw-bg-opacity, 1));transition-property:transform;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-duration:150ms}.toggle.svelte-14mlxud:checked::before{--tw-translate-x:1.5rem;transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.checkbox.svelte-14mlxud{height:1rem;width:1rem;border-radius:0.25rem;border-color:rgb(255 255 255 / 0.2);background-color:rgb(0 0 0 / 0.3);--tw-text-opacity:1;color:rgb(59 130 246 / var(--tw-text-opacity, 1))}.checkbox.svelte-14mlxud:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);--tw-ring-opacity:1;--tw-ring-color:rgb(59 130 246 / var(--tw-ring-opacity, 1))}@keyframes svelte-14mlxud-slide-in-from-right{from{transform:translateX(100%);opacity:0}to{transform:translateX(0);opacity:1}}.animate-in.svelte-14mlxud{animation:svelte-14mlxud-slide-in-from-right 0.3s ease-out}",
  map: `{"version":3,"file":"AdminConsoleTab.svelte","sources":["AdminConsoleTab.svelte"],"sourcesContent":["<!-- Admin Console Tab Component - Embedded version of /adminconsole -->\\n<script lang=\\"ts\\">import { onMount, onDestroy } from \\"svelte\\";\\nimport { djammsStore, playerStatus } from \\"$lib/stores/djamms\\";\\nimport {\\n  Settings,\\n  User,\\n  Monitor,\\n  Sliders,\\n  Palette,\\n  Shield,\\n  Globe,\\n  Volume2,\\n  Keyboard,\\n  Bell,\\n  Database,\\n  Wifi,\\n  WifiOff,\\n  Circle,\\n  AlertTriangle,\\n  Save,\\n  RotateCcw,\\n  Download,\\n  Upload,\\n  Copy,\\n  Check,\\n  X,\\n  Eye,\\n  EyeOff,\\n  Lock,\\n  Unlock,\\n  RefreshCw,\\n  Trash2,\\n  Plus\\n} from \\"lucide-svelte\\";\\nimport { browser } from \\"$app/environment\\";\\nlet activeTab = \\"player\\";\\nlet playerSettings = {\\n  autoPlay: true,\\n  shuffle: false,\\n  repeat: \\"none\\",\\n  // 'none', 'one', 'all'\\n  volume: 75,\\n  crossfade: 3,\\n  quality: \\"high\\",\\n  // 'low', 'medium', 'high', 'highest'\\n  buffer: 10,\\n  skipIntro: true,\\n  skipOutro: false\\n};\\nlet uiSettings = {\\n  theme: \\"dark\\",\\n  // 'dark', 'light', 'auto'\\n  accentColor: \\"purple\\",\\n  // 'purple', 'pink', 'blue', 'green', 'red'\\n  compactMode: false,\\n  showThumbnails: true,\\n  animationsEnabled: true,\\n  transparencyEffects: true,\\n  fontScale: 100\\n  // 75, 100, 125, 150\\n};\\nlet privacySettings = {\\n  shareActivity: false,\\n  allowRemoteControl: true,\\n  saveHistory: true,\\n  publicProfile: false,\\n  analytics: true,\\n  crashReports: true\\n};\\nlet systemSettings = {\\n  maxCacheSize: 1e3,\\n  // MB\\n  backgroundSync: true,\\n  offlineMode: false,\\n  powerSaver: false,\\n  notifications: true,\\n  updateChannel: \\"stable\\"\\n  // 'stable', 'beta', 'dev'\\n};\\nlet performanceData = {\\n  memoryUsage: 0,\\n  cacheSize: 0,\\n  networkUsage: 0,\\n  uptime: 0,\\n  errors: 0\\n};\\nlet exportData = {\\n  includeSettings: true,\\n  includePlaylists: true,\\n  includeHistory: false,\\n  includeCache: false\\n};\\nlet isExporting = false;\\nlet isImporting = false;\\nlet importFile = null;\\nfunction handleFileChange(event) {\\n  const target = event.target;\\n  importFile = target?.files?.[0] || null;\\n}\\nlet toastMessage = \\"\\";\\nlet toastType = \\"info\\";\\nlet showToast = false;\\nfunction getStatusDisplay(status) {\\n  switch (status?.status) {\\n    case \\"connected-local-playing\\":\\n      return { icon: Circle, text: \\"CONNECTED (LOCAL), PLAYING\\", class: \\"status-connected-playing\\" };\\n    case \\"connected-local-paused\\":\\n      return { icon: Circle, text: \\"CONNECTED (LOCAL), PAUSED\\", class: \\"status-connected-paused\\" };\\n    case \\"connected-remote-playing\\":\\n      return { icon: Wifi, text: \\"CONNECTED (REMOTE), PLAYING\\", class: \\"status-connected-playing\\" };\\n    case \\"connected-remote-paused\\":\\n      return { icon: Wifi, text: \\"CONNECTED (REMOTE), PAUSED\\", class: \\"status-connected-paused\\" };\\n    case \\"server-error\\":\\n      return { icon: AlertTriangle, text: \\"SERVER ERROR\\", class: \\"status-error\\" };\\n    case \\"no-connected-player\\":\\n      return { icon: WifiOff, text: \\"NO CONNECTED PLAYER\\", class: \\"status-disconnected\\" };\\n    default:\\n      return { icon: WifiOff, text: \\"NO CONNECTED PLAYER\\", class: \\"status-disconnected\\" };\\n  }\\n}\\nfunction showToastMessage(message, type = \\"info\\") {\\n  toastMessage = message;\\n  toastType = type;\\n  showToast = true;\\n  setTimeout(() => {\\n    showToast = false;\\n  }, 3e3);\\n}\\nasync function saveSettings() {\\n  try {\\n    console.log(\\"\\\\u{1F527} Saving admin console settings...\\");\\n    showToastMessage(\\"Settings saved successfully\\", \\"success\\");\\n  } catch (error) {\\n    console.error(\\"\\\\u{1F527} Error saving settings:\\", error);\\n    showToastMessage(\\"Failed to save settings\\", \\"error\\");\\n  }\\n}\\nfunction resetSettings() {\\n  if (confirm(\\"Are you sure you want to reset all settings to defaults? This cannot be undone.\\")) {\\n    playerSettings = {\\n      autoPlay: true,\\n      shuffle: false,\\n      repeat: \\"none\\",\\n      volume: 75,\\n      crossfade: 3,\\n      quality: \\"high\\",\\n      buffer: 10,\\n      skipIntro: true,\\n      skipOutro: false\\n    };\\n    uiSettings = {\\n      theme: \\"dark\\",\\n      accentColor: \\"purple\\",\\n      compactMode: false,\\n      showThumbnails: true,\\n      animationsEnabled: true,\\n      transparencyEffects: true,\\n      fontScale: 100\\n    };\\n    privacySettings = {\\n      shareActivity: false,\\n      allowRemoteControl: true,\\n      saveHistory: true,\\n      publicProfile: false,\\n      analytics: true,\\n      crashReports: true\\n    };\\n    systemSettings = {\\n      maxCacheSize: 1e3,\\n      backgroundSync: true,\\n      offlineMode: false,\\n      powerSaver: false,\\n      notifications: true,\\n      updateChannel: \\"stable\\"\\n    };\\n    showToastMessage(\\"Settings reset to defaults\\", \\"info\\");\\n  }\\n}\\nasync function exportSettings() {\\n  isExporting = true;\\n  try {\\n    const settingsData = {\\n      version: \\"2.0\\",\\n      timestamp: (/* @__PURE__ */ new Date()).toISOString(),\\n      settings: exportData.includeSettings ? {\\n        player: playerSettings,\\n        ui: uiSettings,\\n        privacy: privacySettings,\\n        system: systemSettings\\n      } : null,\\n      playlists: exportData.includePlaylists ? [] : null,\\n      // Would fetch actual playlists\\n      history: exportData.includeHistory ? [] : null,\\n      cache: exportData.includeCache ? performanceData : null\\n    };\\n    const blob = new Blob([JSON.stringify(settingsData, null, 2)], {\\n      type: \\"application/json\\"\\n    });\\n    const url = URL.createObjectURL(blob);\\n    const a = document.createElement(\\"a\\");\\n    a.href = url;\\n    a.download = \`djamms-backup-\${(/* @__PURE__ */ new Date()).toISOString().split(\\"T\\")[0]}.json\`;\\n    document.body.appendChild(a);\\n    a.click();\\n    document.body.removeChild(a);\\n    URL.revokeObjectURL(url);\\n    showToastMessage(\\"Settings exported successfully\\", \\"success\\");\\n  } catch (error) {\\n    console.error(\\"\\\\u{1F527} Export failed:\\", error);\\n    showToastMessage(\\"Export failed\\", \\"error\\");\\n  } finally {\\n    isExporting = false;\\n  }\\n}\\nasync function importSettings() {\\n  if (!importFile) return;\\n  isImporting = true;\\n  try {\\n    const text = await importFile.text();\\n    const data = JSON.parse(text);\\n    if (data.settings) {\\n      if (data.settings.player) playerSettings = { ...playerSettings, ...data.settings.player };\\n      if (data.settings.ui) uiSettings = { ...uiSettings, ...data.settings.ui };\\n      if (data.settings.privacy) privacySettings = { ...privacySettings, ...data.settings.privacy };\\n      if (data.settings.system) systemSettings = { ...systemSettings, ...data.settings.system };\\n    }\\n    showToastMessage(\\"Settings imported successfully\\", \\"success\\");\\n    importFile = null;\\n  } catch (error) {\\n    console.error(\\"\\\\u{1F527} Import failed:\\", error);\\n    showToastMessage(\\"Import failed - invalid file format\\", \\"error\\");\\n  } finally {\\n    isImporting = false;\\n  }\\n}\\nfunction clearCache() {\\n  if (confirm(\\"Clear all cached data? This may slow down the next startup.\\")) {\\n    console.log(\\"\\\\u{1F527} Clearing cache...\\");\\n    showToastMessage(\\"Cache cleared successfully\\", \\"success\\");\\n    performanceData.cacheSize = 0;\\n  }\\n}\\nconst adminTabs = [\\n  {\\n    id: \\"player\\",\\n    title: \\"Player\\",\\n    icon: Play,\\n    description: \\"Playback and audio settings\\"\\n  },\\n  {\\n    id: \\"ui\\",\\n    title: \\"Interface\\",\\n    icon: Palette,\\n    description: \\"Theme and appearance settings\\"\\n  },\\n  {\\n    id: \\"privacy\\",\\n    title: \\"Privacy\\",\\n    icon: Shield,\\n    description: \\"Privacy and security settings\\"\\n  },\\n  {\\n    id: \\"system\\",\\n    title: \\"System\\",\\n    icon: Monitor,\\n    description: \\"Performance and system settings\\"\\n  },\\n  {\\n    id: \\"backup\\",\\n    title: \\"Backup\\",\\n    icon: Database,\\n    description: \\"Export and import settings\\"\\n  }\\n];\\nonMount(() => {\\n  console.log(\\"\\\\u{1F527} Admin Console Tab: Component mounted\\");\\n  performanceData = {\\n    memoryUsage: Math.floor(Math.random() * 500) + 200,\\n    cacheSize: Math.floor(Math.random() * 200) + 50,\\n    networkUsage: Math.floor(Math.random() * 10) + 2,\\n    uptime: Math.floor(Date.now() / 1e3 - Math.random() * 86400),\\n    errors: Math.floor(Math.random() * 3)\\n  };\\n});\\nonDestroy(() => {\\n  console.log(\\"\\\\u{1F527} Admin Console Tab: Component destroyed\\");\\n});\\nimport { Play } from \\"lucide-svelte\\";\\n<\/script>\\n\\n<div class=\\"h-full flex flex-col bg-gradient-to-br from-youtube-dark via-youtube-darker to-music-purple\\">\\n\\t<!-- Admin Console Header -->\\n\\t<div class=\\"p-6 glass-morphism border-b border-white/10\\">\\n\\t\\t<div class=\\"flex items-center justify-between mb-6\\">\\n\\t\\t\\t<div class=\\"flex items-center gap-4\\">\\n\\t\\t\\t\\t<div class=\\"w-12 h-12 bg-gradient-to-br from-blue-500 to-blue-700 rounded-xl flex items-center justify-center\\">\\n\\t\\t\\t\\t\\t<Settings class=\\"w-6 h-6 text-white\\" />\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t<h1 class=\\"text-2xl font-bold text-white\\">Admin Console</h1>\\n\\t\\t\\t\\t\\t<p class=\\"text-gray-400\\">Configure player settings and preferences</p>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<!-- Player Status -->\\n\\t\\t\\t{#if $playerStatus.isConnected}\\n\\t\\t\\t\\t{@const statusDisplay = getStatusDisplay($playerStatus)}\\n\\t\\t\\t\\t<div class=\\"status-indicator {statusDisplay.class}\\">\\n\\t\\t\\t\\t\\t<svelte:component this={statusDisplay.icon} class=\\"w-4 h-4\\" />\\n\\t\\t\\t\\t\\t<span class=\\"text-sm\\">{statusDisplay.text}</span>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t{/if}\\n\\t\\t</div>\\n\\n\\t\\t<!-- Tab Navigation -->\\n\\t\\t<div class=\\"flex items-center gap-2 overflow-x-auto pb-2\\">\\n\\t\\t\\t{#each adminTabs as tab}\\n\\t\\t\\t\\t<button\\n\\t\\t\\t\\t\\ton:click={() => activeTab = tab.id}\\n\\t\\t\\t\\t\\tclass=\\"flex items-center gap-3 px-4 py-3 rounded-xl transition-all whitespace-nowrap {activeTab === tab.id ? 'bg-blue-500/20 text-blue-400 border border-blue-500/30' : 'bg-black/20 text-gray-400 hover:text-white hover:bg-black/30 border border-transparent'}\\"\\n\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t<svelte:component this={tab.icon} class=\\"w-4 h-4\\" />\\n\\t\\t\\t\\t\\t<div class=\\"text-left\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\"font-medium\\">{tab.title}</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\"text-xs opacity-70\\">{tab.description}</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t{/each}\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<!-- Tab Content -->\\n\\t<div class=\\"flex-1 overflow-auto\\">\\n\\t\\t<div class=\\"p-6\\">\\n\\t\\t\\t{#if activeTab === 'player'}\\n\\t\\t\\t\\t<!-- Player Settings -->\\n\\t\\t\\t\\t<div class=\\"max-w-4xl space-y-6\\">\\n\\t\\t\\t\\t\\t<div class=\\"glass-morphism rounded-2xl p-6\\">\\n\\t\\t\\t\\t\\t\\t<h3 class=\\"text-lg font-semibold text-white mb-4\\">Playback Settings</h3>\\n\\t\\t\\t\\t\\t\\t<div class=\\"grid md:grid-cols-2 gap-6\\">\\n\\t\\t\\t\\t\\t\\t\\t<!-- Auto Play -->\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\"flex items-center justify-between\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\"auto-play\\" class=\\"text-white font-medium\\">Auto Play</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\"text-sm text-gray-400\\">Automatically start playing when tracks are added</p>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<input id=\\"auto-play\\" type=\\"checkbox\\" bind:checked={playerSettings.autoPlay} class=\\"toggle\\" />\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t<!-- Shuffle -->\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\"flex items-center justify-between\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\"shuffle-default\\" class=\\"text-white font-medium\\">Shuffle by Default</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\"text-sm text-gray-400\\">Enable shuffle when starting playback</p>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<input id=\\"shuffle-default\\" type=\\"checkbox\\" bind:checked={playerSettings.shuffle} class=\\"toggle\\" />\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t<!-- Repeat Mode -->\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\"repeat-mode\\" class=\\"block text-white font-medium mb-2\\">Default Repeat Mode</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\"repeat-mode\\" bind:value={playerSettings.repeat} class=\\"setting-select\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\"none\\">No Repeat</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\"one\\">Repeat One</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\"all\\">Repeat All</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t<!-- Volume -->\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\"default-volume\\" class=\\"block text-white font-medium mb-2\\">Default Volume</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\"flex items-center gap-3\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input id=\\"default-volume\\" type=\\"range\\" min=\\"0\\" max=\\"100\\" bind:value={playerSettings.volume} class=\\"flex-1\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\"text-sm text-gray-400 w-12\\">{playerSettings.volume}%</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t<!-- Crossfade -->\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\"crossfade-duration\\" class=\\"block text-white font-medium mb-2\\">Crossfade Duration</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\"flex items-center gap-3\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input id=\\"crossfade-duration\\" type=\\"range\\" min=\\"0\\" max=\\"10\\" bind:value={playerSettings.crossfade} class=\\"flex-1\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\"text-sm text-gray-400 w-12\\">{playerSettings.crossfade}s</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t<!-- Quality -->\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\"audio-quality\\" class=\\"block text-white font-medium mb-2\\">Audio Quality</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\"audio-quality\\" bind:value={playerSettings.quality} class=\\"setting-select\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\"low\\">Low (144p)</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\"medium\\">Medium (360p)</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\"high\\">High (720p)</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\"highest\\">Highest Available</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div class=\\"glass-morphism rounded-2xl p-6\\">\\n\\t\\t\\t\\t\\t\\t<h3 class=\\"text-lg font-semibold text-white mb-4\\">Advanced Settings</h3>\\n\\t\\t\\t\\t\\t\\t<div class=\\"grid md:grid-cols-2 gap-6\\">\\n\\t\\t\\t\\t\\t\\t\\t<!-- Buffer Size -->\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\"buffer-size\\" class=\\"block text-white font-medium mb-2\\">Buffer Size</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\"flex items-center gap-3\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input id=\\"buffer-size\\" type=\\"range\\" min=\\"5\\" max=\\"30\\" bind:value={playerSettings.buffer} class=\\"flex-1\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\"text-sm text-gray-400 w-12\\">{playerSettings.buffer}s</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t<!-- Skip Intro -->\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\"flex items-center justify-between\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\"skip-intros\\" class=\\"text-white font-medium\\">Skip Intros</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\"text-sm text-gray-400\\">Automatically skip video intros when detected</p>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<input id=\\"skip-intros\\" type=\\"checkbox\\" bind:checked={playerSettings.skipIntro} class=\\"toggle\\" />\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t<!-- Skip Outro -->\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\"flex items-center justify-between\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\"skip-outros\\" class=\\"text-white font-medium\\">Skip Outros</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\"text-sm text-gray-400\\">Automatically skip video outros when detected</p>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<input id=\\"skip-outros\\" type=\\"checkbox\\" bind:checked={playerSettings.skipOutro} class=\\"toggle\\" />\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t{:else if activeTab === 'ui'}\\n\\t\\t\\t\\t<!-- UI Settings -->\\n\\t\\t\\t\\t<div class=\\"max-w-4xl space-y-6\\">\\n\\t\\t\\t\\t\\t<div class=\\"glass-morphism rounded-2xl p-6\\">\\n\\t\\t\\t\\t\\t\\t<h3 class=\\"text-lg font-semibold text-white mb-4\\">Appearance</h3>\\n\\t\\t\\t\\t\\t\\t<div class=\\"grid md:grid-cols-2 gap-6\\">\\n\\t\\t\\t\\t\\t\\t\\t<!-- Theme -->\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\"ui-theme\\" class=\\"block text-white font-medium mb-2\\">Theme</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\"ui-theme\\" bind:value={uiSettings.theme} class=\\"setting-select\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\"dark\\">Dark</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\"light\\">Light</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\"auto\\">Auto (System)</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t<!-- Accent Color -->\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\"accent-color\\" class=\\"block text-white font-medium mb-2\\">Accent Color</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div id=\\"accent-color\\" class=\\"flex items-center gap-2\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{#each ['purple', 'pink', 'blue', 'green', 'red'] as color}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ton:click={() => uiSettings.accentColor = color}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\"w-8 h-8 rounded-full border-2 {uiSettings.accentColor === color ? 'border-white' : 'border-transparent'}\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclass:bg-purple-500={color === 'purple'}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclass:bg-pink-500={color === 'pink'}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclass:bg-blue-500={color === 'blue'}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclass:bg-green-500={color === 'green'}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclass:bg-red-500={color === 'red'}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t></button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{/each}\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t<!-- Font Scale -->\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\"font-size\\" class=\\"block text-white font-medium mb-2\\">Font Size</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\"font-size\\" bind:value={uiSettings.fontScale} class=\\"setting-select\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value={75}>Small (75%)</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value={100}>Normal (100%)</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value={125}>Large (125%)</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value={150}>Extra Large (150%)</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t<!-- Compact Mode -->\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\"flex items-center justify-between\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\"compact-mode\\" class=\\"text-white font-medium\\">Compact Mode</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\"text-sm text-gray-400\\">Use smaller UI elements to fit more content</p>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<input id=\\"compact-mode\\" type=\\"checkbox\\" bind:checked={uiSettings.compactMode} class=\\"toggle\\" />\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div class=\\"glass-morphism rounded-2xl p-6\\">\\n\\t\\t\\t\\t\\t\\t<h3 class=\\"text-lg font-semibold text-white mb-4\\">Visual Effects</h3>\\n\\t\\t\\t\\t\\t\\t<div class=\\"grid md:grid-cols-2 gap-6\\">\\n\\t\\t\\t\\t\\t\\t\\t<!-- Show Thumbnails -->\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\"flex items-center justify-between\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\"show-thumbnails\\" class=\\"text-white font-medium\\">Show Thumbnails</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\"text-sm text-gray-400\\">Display video thumbnails in playlists</p>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<input id=\\"show-thumbnails\\" type=\\"checkbox\\" bind:checked={uiSettings.showThumbnails} class=\\"toggle\\" />\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t<!-- Animations -->\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\"flex items-center justify-between\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\"enable-animations\\" class=\\"text-white font-medium\\">Enable Animations</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\"text-sm text-gray-400\\">Use smooth transitions and animations</p>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<input id=\\"enable-animations\\" type=\\"checkbox\\" bind:checked={uiSettings.animationsEnabled} class=\\"toggle\\" />\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t<!-- Transparency Effects -->\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\"flex items-center justify-between\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\"glass-effects\\" class=\\"text-white font-medium\\">Glass Effects</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\"text-sm text-gray-400\\">Enable glass morphism and transparency</p>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<input id=\\"glass-effects\\" type=\\"checkbox\\" bind:checked={uiSettings.transparencyEffects} class=\\"toggle\\" />\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t{:else if activeTab === 'privacy'}\\n\\t\\t\\t\\t<!-- Privacy Settings -->\\n\\t\\t\\t\\t<div class=\\"max-w-4xl space-y-6\\">\\n\\t\\t\\t\\t\\t<div class=\\"glass-morphism rounded-2xl p-6\\">\\n\\t\\t\\t\\t\\t\\t<h3 class=\\"text-lg font-semibold text-white mb-4\\">Privacy & Sharing</h3>\\n\\t\\t\\t\\t\\t\\t<div class=\\"space-y-6\\">\\n\\t\\t\\t\\t\\t\\t\\t<!-- Share Activity -->\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\"flex items-center justify-between\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\"share-activity\\" class=\\"text-white font-medium\\">Share Activity Status</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\"text-sm text-gray-400\\">Let other users see what you're currently playing</p>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<input id=\\"share-activity\\" type=\\"checkbox\\" bind:checked={privacySettings.shareActivity} class=\\"toggle\\" />\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t<!-- Remote Control -->\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\"flex items-center justify-between\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\"allow-remote-control\\" class=\\"text-white font-medium\\">Allow Remote Control</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\"text-sm text-gray-400\\">Allow other devices to control this player</p>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<input id=\\"allow-remote-control\\" type=\\"checkbox\\" bind:checked={privacySettings.allowRemoteControl} class=\\"toggle\\" />\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t<!-- Save History -->\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\"flex items-center justify-between\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\"save-history\\" class=\\"text-white font-medium\\">Save Listening History</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\"text-sm text-gray-400\\">Keep a record of played tracks for recommendations</p>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<input id=\\"save-history\\" type=\\"checkbox\\" bind:checked={privacySettings.saveHistory} class=\\"toggle\\" />\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t<!-- Public Profile -->\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\"flex items-center justify-between\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\"public-profile\\" class=\\"text-white font-medium\\">Public Profile</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\"text-sm text-gray-400\\">Make your profile and playlists discoverable</p>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<input id=\\"public-profile\\" type=\\"checkbox\\" bind:checked={privacySettings.publicProfile} class=\\"toggle\\" />\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div class=\\"glass-morphism rounded-2xl p-6\\">\\n\\t\\t\\t\\t\\t\\t<h3 class=\\"text-lg font-semibold text-white mb-4\\">Data & Analytics</h3>\\n\\t\\t\\t\\t\\t\\t<div class=\\"space-y-6\\">\\n\\t\\t\\t\\t\\t\\t\\t<!-- Analytics -->\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\"flex items-center justify-between\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\"usage-analytics\\" class=\\"text-white font-medium\\">Usage Analytics</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\"text-sm text-gray-400\\">Help improve DJAMMS by sharing anonymous usage data</p>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<input id=\\"usage-analytics\\" type=\\"checkbox\\" bind:checked={privacySettings.analytics} class=\\"toggle\\" />\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t<!-- Crash Reports -->\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\"flex items-center justify-between\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\"crash-reports\\" class=\\"text-white font-medium\\">Crash Reports</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\"text-sm text-gray-400\\">Automatically send crash reports to help fix bugs</p>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<input id=\\"crash-reports\\" type=\\"checkbox\\" bind:checked={privacySettings.crashReports} class=\\"toggle\\" />\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t{:else if activeTab === 'system'}\\n\\t\\t\\t\\t<!-- System Settings -->\\n\\t\\t\\t\\t<div class=\\"max-w-4xl space-y-6\\">\\n\\t\\t\\t\\t\\t<div class=\\"glass-morphism rounded-2xl p-6\\">\\n\\t\\t\\t\\t\\t\\t<h3 class=\\"text-lg font-semibold text-white mb-4\\">Performance</h3>\\n\\t\\t\\t\\t\\t\\t<div class=\\"grid md:grid-cols-2 gap-6\\">\\n\\t\\t\\t\\t\\t\\t\\t<!-- Cache Size -->\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\"max-cache-size\\" class=\\"block text-white font-medium mb-2\\">Max Cache Size (MB)</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\"flex items-center gap-3\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input id=\\"max-cache-size\\" type=\\"range\\" min=\\"100\\" max=\\"5000\\" step=\\"100\\" bind:value={systemSettings.maxCacheSize} class=\\"flex-1\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\"text-sm text-gray-400 w-16\\">{systemSettings.maxCacheSize}MB</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t<!-- Background Sync -->\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\"flex items-center justify-between\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\"background-sync\\" class=\\"text-white font-medium\\">Background Sync</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\"text-sm text-gray-400\\">Keep playlists synchronized when app is idle</p>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<input id=\\"background-sync\\" type=\\"checkbox\\" bind:checked={systemSettings.backgroundSync} class=\\"toggle\\" />\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t<!-- Offline Mode -->\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\"flex items-center justify-between\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\"offline-mode\\" class=\\"text-white font-medium\\">Offline Mode</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\"text-sm text-gray-400\\">Cache tracks for offline playback</p>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<input id=\\"offline-mode\\" type=\\"checkbox\\" bind:checked={systemSettings.offlineMode} class=\\"toggle\\" />\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t<!-- Power Saver -->\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\"flex items-center justify-between\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\"power-saver\\" class=\\"text-white font-medium\\">Power Saver Mode</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\"text-sm text-gray-400\\">Reduce CPU usage and battery drain</p>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<input id=\\"power-saver\\" type=\\"checkbox\\" bind:checked={systemSettings.powerSaver} class=\\"toggle\\" />\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t<!-- Notifications -->\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\"flex items-center justify-between\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\"system-notifications\\" class=\\"text-white font-medium\\">System Notifications</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\"text-sm text-gray-400\\">Show desktop notifications for track changes</p>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<input id=\\"system-notifications\\" type=\\"checkbox\\" bind:checked={systemSettings.notifications} class=\\"toggle\\" />\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t<!-- Update Channel -->\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\"update-channel\\" class=\\"block text-white font-medium mb-2\\">Update Channel</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\"update-channel\\" bind:value={systemSettings.updateChannel} class=\\"setting-select\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\"stable\\">Stable (Recommended)</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\"beta\\">Beta (Early Access)</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\"dev\\">Development (Latest)</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<!-- Performance Monitor -->\\n\\t\\t\\t\\t\\t<div class=\\"glass-morphism rounded-2xl p-6\\">\\n\\t\\t\\t\\t\\t\\t<h3 class=\\"text-lg font-semibold text-white mb-4\\">System Monitor</h3>\\n\\t\\t\\t\\t\\t\\t<div class=\\"grid md:grid-cols-2 lg:grid-cols-3 gap-4\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\"bg-black/20 rounded-lg p-4\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\"flex items-center gap-2 mb-2\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<Monitor class=\\"w-4 h-4 text-blue-400\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\"text-sm text-gray-400\\">Memory Usage</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\"text-xl font-bold text-white\\">{performanceData.memoryUsage}MB</span>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\"bg-black/20 rounded-lg p-4\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\"flex items-center gap-2 mb-2\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<Database class=\\"w-4 h-4 text-green-400\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\"text-sm text-gray-400\\">Cache Size</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\"text-xl font-bold text-white\\">{performanceData.cacheSize}MB</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t<button \\n\\t\\t\\t\\t\\t\\t\\t\\t\\ton:click={clearCache}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\"text-xs text-red-400 hover:text-red-300 mt-1 block\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tClear Cache\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\"bg-black/20 rounded-lg p-4\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\"flex items-center gap-2 mb-2\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<Globe class=\\"w-4 h-4 text-purple-400\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\"text-sm text-gray-400\\">Network</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\"text-xl font-bold text-white\\">{performanceData.networkUsage}MB/s</span>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t{:else if activeTab === 'backup'}\\n\\t\\t\\t\\t<!-- Backup & Export -->\\n\\t\\t\\t\\t<div class=\\"max-w-4xl space-y-6\\">\\n\\t\\t\\t\\t\\t<div class=\\"glass-morphism rounded-2xl p-6\\">\\n\\t\\t\\t\\t\\t\\t<h3 class=\\"text-lg font-semibold text-white mb-4\\">Export Settings</h3>\\n\\t\\t\\t\\t\\t\\t<div class=\\"space-y-4 mb-6\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\"flex items-center gap-3\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<input id=\\"export-settings\\" type=\\"checkbox\\" bind:checked={exportData.includeSettings} class=\\"checkbox\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\"export-settings\\" class=\\"text-white\\">Include Settings</label>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\"flex items-center gap-3\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<input id=\\"export-playlists\\" type=\\"checkbox\\" bind:checked={exportData.includePlaylists} class=\\"checkbox\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\"export-playlists\\" class=\\"text-white\\">Include Playlists</label>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\"flex items-center gap-3\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<input id=\\"export-history\\" type=\\"checkbox\\" bind:checked={exportData.includeHistory} class=\\"checkbox\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\"export-history\\" class=\\"text-white\\">Include Listening History</label>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\"flex items-center gap-3\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<input id=\\"export-cache\\" type=\\"checkbox\\" bind:checked={exportData.includeCache} class=\\"checkbox\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\"export-cache\\" class=\\"text-white\\">Include Performance Data</label>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t<button \\n\\t\\t\\t\\t\\t\\t\\ton:click={exportSettings}\\n\\t\\t\\t\\t\\t\\t\\tdisabled={isExporting}\\n\\t\\t\\t\\t\\t\\t\\tclass=\\"flex items-center gap-2 px-4 py-2 bg-green-500 hover:bg-green-600 disabled:bg-gray-600 disabled:cursor-not-allowed rounded-lg text-white transition-colors\\"\\n\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t{#if isExporting}\\n\\t\\t\\t\\t\\t\\t\\t\\t<RefreshCw class=\\"w-4 h-4 animate-spin\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\tExporting...\\n\\t\\t\\t\\t\\t\\t\\t{:else}\\n\\t\\t\\t\\t\\t\\t\\t\\t<Download class=\\"w-4 h-4\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\tExport Backup\\n\\t\\t\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div class=\\"glass-morphism rounded-2xl p-6\\">\\n\\t\\t\\t\\t\\t\\t<h3 class=\\"text-lg font-semibold text-white mb-4\\">Import Settings</h3>\\n\\t\\t\\t\\t\\t\\t<div class=\\"space-y-4\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\"border-2 border-dashed border-white/20 rounded-lg p-6 text-center\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<input \\n\\t\\t\\t\\t\\t\\t\\t\\t\\ttype=\\"file\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\taccept=\\".json\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\ton:change={handleFileChange}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\"hidden\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tid=\\"import-file\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\"import-file\\" class=\\"cursor-pointer\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<Upload class=\\"w-8 h-8 text-gray-400 mx-auto mb-2\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\"text-gray-400\\">Click to select backup file</p>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{#if importFile}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\"text-white mt-2\\">{importFile.name}</p>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t\\t\\t\\t\\t</label>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t{#if importFile}\\n\\t\\t\\t\\t\\t\\t\\t\\t<button \\n\\t\\t\\t\\t\\t\\t\\t\\t\\ton:click={importSettings}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tdisabled={isImporting}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\"flex items-center gap-2 px-4 py-2 bg-blue-500 hover:bg-blue-600 disabled:bg-gray-600 disabled:cursor-not-allowed rounded-lg text-white transition-colors\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{#if isImporting}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<RefreshCw class=\\"w-4 h-4 animate-spin\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tImporting...\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{:else}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<Upload class=\\"w-4 h-4\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tImport Settings\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t{/if}\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<!-- Action Buttons (fixed at bottom) -->\\n\\t<div class=\\"p-6 border-t border-white/10 glass-morphism\\">\\n\\t\\t<div class=\\"flex items-center justify-between\\">\\n\\t\\t\\t<div class=\\"flex items-center gap-3\\">\\n\\t\\t\\t\\t<button \\n\\t\\t\\t\\t\\ton:click={saveSettings}\\n\\t\\t\\t\\t\\tclass=\\"flex items-center gap-2 px-6 py-2 bg-green-500 hover:bg-green-600 rounded-lg text-white transition-colors\\"\\n\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t<Save class=\\"w-4 h-4\\" />\\n\\t\\t\\t\\t\\tSave Changes\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<button \\n\\t\\t\\t\\t\\ton:click={resetSettings}\\n\\t\\t\\t\\t\\tclass=\\"flex items-center gap-2 px-4 py-2 bg-red-500/20 hover:bg-red-500/30 border border-red-500/30 rounded-lg text-red-400 hover:text-red-300 transition-colors\\"\\n\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t<RotateCcw class=\\"w-4 h-4\\" />\\n\\t\\t\\t\\t\\tReset to Defaults\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<div class=\\"text-xs text-gray-500\\">\\n\\t\\t\\t\\tAuto-save enabled • Last saved: Never\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\\n<!-- Toast Notification -->\\n{#if showToast}\\n\\t<div class=\\"fixed bottom-6 right-6 z-50 animate-in slide-in-from-right\\">\\n\\t\\t<div class=\\"flex items-center gap-3 px-4 py-3 glass-morphism border border-white/20 rounded-lg text-white shadow-lg\\">\\n\\t\\t\\t{#if toastType === 'success'}\\n\\t\\t\\t\\t<Check class=\\"w-4 h-4 text-green-400\\" />\\n\\t\\t\\t{:else if toastType === 'error'}\\n\\t\\t\\t\\t<X class=\\"w-4 h-4 text-red-400\\" />\\n\\t\\t\\t{:else}\\n\\t\\t\\t\\t<Circle class=\\"w-4 h-4 text-blue-400\\" />\\n\\t\\t\\t{/if}\\n\\t\\t\\t<span>{toastMessage}</span>\\n\\t\\t</div>\\n\\t</div>\\n{/if}\\n\\n<style lang=\\"postcss\\">\\n\\t.status-indicator {\\n\\t\\tdisplay: flex;\\n\\t\\talign-items: center;\\n\\t\\tgap: 0.5rem;\\n\\t\\tborder-radius: 0.5rem;\\n\\t\\tpadding-left: 0.75rem;\\n\\t\\tpadding-right: 0.75rem;\\n\\t\\tpadding-top: 0.5rem;\\n\\t\\tpadding-bottom: 0.5rem;\\n\\t\\tfont-size: 0.875rem;\\n\\t\\tline-height: 1.25rem;\\n\\t\\tfont-weight: 500;\\n}\\n\\t\\n\\t.status-connected-playing {\\n\\t\\tborder-width: 1px;\\n\\t\\tborder-color: rgb(34 197 94 / 0.3);\\n\\t\\tbackground-color: rgb(34 197 94 / 0.2);\\n\\t\\t--tw-text-opacity: 1;\\n\\t\\tcolor: rgb(74 222 128 / var(--tw-text-opacity, 1));\\n}\\n\\t\\n\\t.status-connected-paused {\\n\\t\\tborder-width: 1px;\\n\\t\\tborder-color: rgb(234 179 8 / 0.3);\\n\\t\\tbackground-color: rgb(234 179 8 / 0.2);\\n\\t\\t--tw-text-opacity: 1;\\n\\t\\tcolor: rgb(250 204 21 / var(--tw-text-opacity, 1));\\n}\\n\\t\\n\\t.status-disconnected {\\n\\t\\tborder-width: 1px;\\n\\t\\tborder-color: rgb(239 68 68 / 0.3);\\n\\t\\tbackground-color: rgb(239 68 68 / 0.2);\\n\\t\\t--tw-text-opacity: 1;\\n\\t\\tcolor: rgb(248 113 113 / var(--tw-text-opacity, 1));\\n}\\n\\t\\n\\t.status-error {\\n\\t\\tborder-width: 1px;\\n\\t\\tborder-color: rgb(239 68 68 / 0.3);\\n\\t\\tbackground-color: rgb(239 68 68 / 0.2);\\n\\t\\t--tw-text-opacity: 1;\\n\\t\\tcolor: rgb(248 113 113 / var(--tw-text-opacity, 1));\\n}\\n\\n\\t.setting-select {\\n\\t\\twidth: 100%;\\n\\t\\tborder-radius: 0.5rem;\\n\\t\\tborder-width: 1px;\\n\\t\\tborder-color: rgb(255 255 255 / 0.2);\\n\\t\\tbackground-color: rgb(0 0 0 / 0.3);\\n\\t\\tpadding-left: 0.75rem;\\n\\t\\tpadding-right: 0.75rem;\\n\\t\\tpadding-top: 0.5rem;\\n\\t\\tpadding-bottom: 0.5rem;\\n\\t\\t--tw-text-opacity: 1;\\n\\t\\tcolor: rgb(255 255 255 / var(--tw-text-opacity, 1));\\n}\\n\\n\\t.setting-select:focus {\\n\\t\\toutline: 2px solid transparent;\\n\\t\\toutline-offset: 2px;\\n\\t\\t--tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);\\n\\t\\t--tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);\\n\\t\\tbox-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);\\n\\t\\t--tw-ring-opacity: 1;\\n\\t\\t--tw-ring-color: rgb(59 130 246 / var(--tw-ring-opacity, 1));\\n}\\n\\n\\t.toggle {\\n\\t\\tposition: relative;\\n\\t\\theight: 1.5rem;\\n\\t\\twidth: 3rem;\\n\\t\\tcursor: pointer;\\n\\t\\t-webkit-appearance: none;\\n\\t\\t   -moz-appearance: none;\\n\\t\\t        appearance: none;\\n\\t\\tborder-radius: 9999px;\\n\\t\\t--tw-bg-opacity: 1;\\n\\t\\tbackground-color: rgb(75 85 99 / var(--tw-bg-opacity, 1));\\n\\t\\ttransition-property: color, background-color, border-color, text-decoration-color, fill, stroke;\\n\\t\\ttransition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\\n\\t\\ttransition-duration: 150ms;\\n}\\n\\n\\t.toggle:checked {\\n\\t\\t--tw-bg-opacity: 1;\\n\\t\\tbackground-color: rgb(59 130 246 / var(--tw-bg-opacity, 1));\\n}\\n\\n\\t.toggle::before {\\n\\t\\tcontent: '';\\n\\t\\tposition: absolute;\\n\\t\\ttop: 0.125rem;\\n\\t\\tleft: 0.125rem;\\n\\t\\theight: 1.25rem;\\n\\t\\twidth: 1.25rem;\\n\\t\\tborder-radius: 9999px;\\n\\t\\t--tw-bg-opacity: 1;\\n\\t\\tbackground-color: rgb(255 255 255 / var(--tw-bg-opacity, 1));\\n\\t\\ttransition-property: transform;\\n\\t\\ttransition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\\n\\t\\ttransition-duration: 150ms;\\n\\t}\\n\\n\\t.toggle:checked::before {\\n\\t\\t--tw-translate-x: 1.5rem;\\n\\t\\ttransform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\\n}\\n\\n\\t.checkbox {\\n\\t\\theight: 1rem;\\n\\t\\twidth: 1rem;\\n\\t\\tborder-radius: 0.25rem;\\n\\t\\tborder-color: rgb(255 255 255 / 0.2);\\n\\t\\tbackground-color: rgb(0 0 0 / 0.3);\\n\\t\\t--tw-text-opacity: 1;\\n\\t\\tcolor: rgb(59 130 246 / var(--tw-text-opacity, 1));\\n}\\n\\n\\t.checkbox:focus {\\n\\t\\t--tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);\\n\\t\\t--tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);\\n\\t\\tbox-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);\\n\\t\\t--tw-ring-opacity: 1;\\n\\t\\t--tw-ring-color: rgb(59 130 246 / var(--tw-ring-opacity, 1));\\n}\\n\\n\\t@keyframes slide-in-from-right {\\n\\t\\tfrom {\\n\\t\\t\\ttransform: translateX(100%);\\n\\t\\t\\topacity: 0;\\n\\t\\t}\\n\\t\\tto {\\n\\t\\t\\ttransform: translateX(0);\\n\\t\\t\\topacity: 1;\\n\\t\\t}\\n\\t}\\n\\n\\t.animate-in {\\n\\t\\tanimation: slide-in-from-right 0.3s ease-out;\\n\\t}\\n</style>"],"names":[],"mappings":"AA+yBC,gCAAkB,CACjB,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,GAAG,CAAE,MAAM,CACX,aAAa,CAAE,MAAM,CACrB,YAAY,CAAE,OAAO,CACrB,aAAa,CAAE,OAAO,CACtB,WAAW,CAAE,MAAM,CACnB,cAAc,CAAE,MAAM,CACtB,SAAS,CAAE,QAAQ,CACnB,WAAW,CAAE,OAAO,CACpB,WAAW,CAAE,GACf,CAEC,wCAA0B,CACzB,YAAY,CAAE,GAAG,CACjB,YAAY,CAAE,IAAI,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAClC,gBAAgB,CAAE,IAAI,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CACtC,iBAAiB,CAAE,CAAC,CACpB,KAAK,CAAE,IAAI,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,iBAAiB,CAAC,EAAE,CAAC,CACnD,CAEC,uCAAyB,CACxB,YAAY,CAAE,GAAG,CACjB,YAAY,CAAE,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAClC,gBAAgB,CAAE,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CACtC,iBAAiB,CAAE,CAAC,CACpB,KAAK,CAAE,IAAI,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,iBAAiB,CAAC,EAAE,CAAC,CACnD,CAEC,mCAAqB,CACpB,YAAY,CAAE,GAAG,CACjB,YAAY,CAAE,IAAI,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAClC,gBAAgB,CAAE,IAAI,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CACtC,iBAAiB,CAAE,CAAC,CACpB,KAAK,CAAE,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,iBAAiB,CAAC,EAAE,CAAC,CACpD,CAEC,4BAAc,CACb,YAAY,CAAE,GAAG,CACjB,YAAY,CAAE,IAAI,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAClC,gBAAgB,CAAE,IAAI,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CACtC,iBAAiB,CAAE,CAAC,CACpB,KAAK,CAAE,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,iBAAiB,CAAC,EAAE,CAAC,CACpD,CAEC,8BAAgB,CACf,KAAK,CAAE,IAAI,CACX,aAAa,CAAE,MAAM,CACrB,YAAY,CAAE,GAAG,CACjB,YAAY,CAAE,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CACpC,gBAAgB,CAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAClC,YAAY,CAAE,OAAO,CACrB,aAAa,CAAE,OAAO,CACtB,WAAW,CAAE,MAAM,CACnB,cAAc,CAAE,MAAM,CACtB,iBAAiB,CAAE,CAAC,CACpB,KAAK,CAAE,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,iBAAiB,CAAC,EAAE,CAAC,CACpD,CAEC,8BAAe,MAAO,CACrB,OAAO,CAAE,GAAG,CAAC,KAAK,CAAC,WAAW,CAC9B,cAAc,CAAE,GAAG,CACnB,uBAAuB,CAAE,kFAAkF,CAC3G,gBAAgB,CAAE,uFAAuF,CACzG,UAAU,CAAE,IAAI,uBAAuB,CAAC,CAAC,CAAC,IAAI,gBAAgB,CAAC,CAAC,CAAC,IAAI,WAAW,CAAC,UAAU,CAAC,CAC5F,iBAAiB,CAAE,CAAC,CACpB,eAAe,CAAE,2CACnB,CAEC,sBAAQ,CACP,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,MAAM,CACd,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,OAAO,CACf,kBAAkB,CAAE,IAAI,CACrB,eAAe,CAAE,IAAI,CAChB,UAAU,CAAE,IAAI,CACxB,aAAa,CAAE,MAAM,CACrB,eAAe,CAAE,CAAC,CAClB,gBAAgB,CAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,eAAe,CAAC,EAAE,CAAC,CAAC,CACzD,mBAAmB,CAAE,KAAK,CAAC,CAAC,gBAAgB,CAAC,CAAC,YAAY,CAAC,CAAC,qBAAqB,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAC/F,0BAA0B,CAAE,aAAa,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CACxD,mBAAmB,CAAE,KACvB,CAEC,sBAAO,QAAS,CACf,eAAe,CAAE,CAAC,CAClB,gBAAgB,CAAE,IAAI,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,eAAe,CAAC,EAAE,CAAC,CAC5D,CAEC,sBAAO,QAAS,CACf,OAAO,CAAE,EAAE,CACX,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,QAAQ,CACb,IAAI,CAAE,QAAQ,CACd,MAAM,CAAE,OAAO,CACf,KAAK,CAAE,OAAO,CACd,aAAa,CAAE,MAAM,CACrB,eAAe,CAAE,CAAC,CAClB,gBAAgB,CAAE,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,eAAe,CAAC,EAAE,CAAC,CAAC,CAC5D,mBAAmB,CAAE,SAAS,CAC9B,0BAA0B,CAAE,aAAa,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CACxD,mBAAmB,CAAE,KACtB,CAEA,sBAAO,QAAQ,QAAS,CACvB,gBAAgB,CAAE,MAAM,CACxB,SAAS,CAAE,UAAU,IAAI,gBAAgB,CAAC,CAAC,CAAC,IAAI,gBAAgB,CAAC,CAAC,CAAC,OAAO,IAAI,WAAW,CAAC,CAAC,CAAC,MAAM,IAAI,WAAW,CAAC,CAAC,CAAC,MAAM,IAAI,WAAW,CAAC,CAAC,CAAC,OAAO,IAAI,YAAY,CAAC,CAAC,CAAC,OAAO,IAAI,YAAY,CAAC,CAChM,CAEC,wBAAU,CACT,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,CACX,aAAa,CAAE,OAAO,CACtB,YAAY,CAAE,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CACpC,gBAAgB,CAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAClC,iBAAiB,CAAE,CAAC,CACpB,KAAK,CAAE,IAAI,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,iBAAiB,CAAC,EAAE,CAAC,CACnD,CAEC,wBAAS,MAAO,CACf,uBAAuB,CAAE,kFAAkF,CAC3G,gBAAgB,CAAE,uFAAuF,CACzG,UAAU,CAAE,IAAI,uBAAuB,CAAC,CAAC,CAAC,IAAI,gBAAgB,CAAC,CAAC,CAAC,IAAI,WAAW,CAAC,UAAU,CAAC,CAC5F,iBAAiB,CAAE,CAAC,CACpB,eAAe,CAAE,2CACnB,CAEC,WAAW,kCAAoB,CAC9B,IAAK,CACJ,SAAS,CAAE,WAAW,IAAI,CAAC,CAC3B,OAAO,CAAE,CACV,CACA,EAAG,CACF,SAAS,CAAE,WAAW,CAAC,CAAC,CACxB,OAAO,CAAE,CACV,CACD,CAEA,0BAAY,CACX,SAAS,CAAE,kCAAmB,CAAC,IAAI,CAAC,QACrC"}`
};
const AdminConsoleTab = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $playerStatus, $$unsubscribe_playerStatus;
  $$unsubscribe_playerStatus = subscribe(playerStatus, (value) => $playerStatus = value);
  let activeTab = "player";
  let playerSettings = {
    autoPlay: true,
    shuffle: false,
    // 'none', 'one', 'all'
    volume: 75,
    crossfade: 3,
    // 'low', 'medium', 'high', 'highest'
    buffer: 10,
    skipIntro: true,
    skipOutro: false
  };
  function getStatusDisplay(status) {
    switch (status?.status) {
      case "connected-local-playing":
        return {
          icon: Circle,
          text: "CONNECTED (LOCAL), PLAYING",
          class: "status-connected-playing"
        };
      case "connected-local-paused":
        return {
          icon: Circle,
          text: "CONNECTED (LOCAL), PAUSED",
          class: "status-connected-paused"
        };
      case "connected-remote-playing":
        return {
          icon: Wifi,
          text: "CONNECTED (REMOTE), PLAYING",
          class: "status-connected-playing"
        };
      case "connected-remote-paused":
        return {
          icon: Wifi,
          text: "CONNECTED (REMOTE), PAUSED",
          class: "status-connected-paused"
        };
      case "server-error":
        return {
          icon: Alert_triangle,
          text: "SERVER ERROR",
          class: "status-error"
        };
      case "no-connected-player":
        return {
          icon: Wifi_off,
          text: "NO CONNECTED PLAYER",
          class: "status-disconnected"
        };
      default:
        return {
          icon: Wifi_off,
          text: "NO CONNECTED PLAYER",
          class: "status-disconnected"
        };
    }
  }
  const adminTabs = [
    {
      id: "player",
      title: "Player",
      icon: Play,
      description: "Playback and audio settings"
    },
    {
      id: "ui",
      title: "Interface",
      icon: Palette,
      description: "Theme and appearance settings"
    },
    {
      id: "privacy",
      title: "Privacy",
      icon: Shield,
      description: "Privacy and security settings"
    },
    {
      id: "system",
      title: "System",
      icon: Monitor,
      description: "Performance and system settings"
    },
    {
      id: "backup",
      title: "Backup",
      icon: Database,
      description: "Export and import settings"
    }
  ];
  onDestroy(() => {
    console.log("🔧 Admin Console Tab: Component destroyed");
  });
  $$result.css.add(css);
  $$unsubscribe_playerStatus();
  return `  <div class="h-full flex flex-col bg-gradient-to-br from-youtube-dark via-youtube-darker to-music-purple"> <div class="p-6 glass-morphism border-b border-white/10"><div class="flex items-center justify-between mb-6"><div class="flex items-center gap-4"><div class="w-12 h-12 bg-gradient-to-br from-blue-500 to-blue-700 rounded-xl flex items-center justify-center">${validate_component(Settings, "Settings").$$render($$result, { class: "w-6 h-6 text-white" }, {}, {})}</div> <div data-svelte-h="svelte-1qik4d3"><h1 class="text-2xl font-bold text-white">Admin Console</h1> <p class="text-gray-400">Configure player settings and preferences</p></div></div>  ${$playerStatus.isConnected ? (() => {
    let statusDisplay = getStatusDisplay($playerStatus);
    return ` <div class="${"status-indicator " + escape(statusDisplay.class, true) + " svelte-14mlxud"}">${validate_component(statusDisplay.icon || missing_component, "svelte:component").$$render($$result, { class: "w-4 h-4" }, {}, {})} <span class="text-sm">${escape(statusDisplay.text)}</span></div>`;
  })() : ``}</div>  <div class="flex items-center gap-2 overflow-x-auto pb-2">${each(adminTabs, (tab) => {
    return `<button class="${"flex items-center gap-3 px-4 py-3 rounded-xl transition-all whitespace-nowrap " + escape(
      activeTab === tab.id ? "bg-blue-500/20 text-blue-400 border border-blue-500/30" : "bg-black/20 text-gray-400 hover:text-white hover:bg-black/30 border border-transparent",
      true
    )}">${validate_component(tab.icon || missing_component, "svelte:component").$$render($$result, { class: "w-4 h-4" }, {}, {})} <div class="text-left"><div class="font-medium">${escape(tab.title)}</div> <div class="text-xs opacity-70">${escape(tab.description)}</div></div> </button>`;
  })}</div></div>  <div class="flex-1 overflow-auto"><div class="p-6">${` <div class="max-w-4xl space-y-6"><div class="glass-morphism rounded-2xl p-6"><h3 class="text-lg font-semibold text-white mb-4" data-svelte-h="svelte-l18s1u">Playback Settings</h3> <div class="grid md:grid-cols-2 gap-6"> <div class="flex items-center justify-between"><div data-svelte-h="svelte-10qptca"><label for="auto-play" class="text-white font-medium">Auto Play</label> <p class="text-sm text-gray-400">Automatically start playing when tracks are added</p></div> <input id="auto-play" type="checkbox" class="toggle svelte-14mlxud"${add_attribute("checked", playerSettings.autoPlay, 1)}></div>  <div class="flex items-center justify-between"><div data-svelte-h="svelte-1hzp561"><label for="shuffle-default" class="text-white font-medium">Shuffle by Default</label> <p class="text-sm text-gray-400">Enable shuffle when starting playback</p></div> <input id="shuffle-default" type="checkbox" class="toggle svelte-14mlxud"${add_attribute("checked", playerSettings.shuffle, 1)}></div>  <div><label for="repeat-mode" class="block text-white font-medium mb-2" data-svelte-h="svelte-1x76pmg">Default Repeat Mode</label> <select id="repeat-mode" class="setting-select svelte-14mlxud"><option value="none" data-svelte-h="svelte-8lg718">No Repeat</option><option value="one" data-svelte-h="svelte-xxsdgj">Repeat One</option><option value="all" data-svelte-h="svelte-ipi8cr">Repeat All</option></select></div>  <div><label for="default-volume" class="block text-white font-medium mb-2" data-svelte-h="svelte-1kd9jw3">Default Volume</label> <div class="flex items-center gap-3"><input id="default-volume" type="range" min="0" max="100" class="flex-1"${add_attribute("value", playerSettings.volume, 0)}> <span class="text-sm text-gray-400 w-12">${escape(playerSettings.volume)}%</span></div></div>  <div><label for="crossfade-duration" class="block text-white font-medium mb-2" data-svelte-h="svelte-101e7kf">Crossfade Duration</label> <div class="flex items-center gap-3"><input id="crossfade-duration" type="range" min="0" max="10" class="flex-1"${add_attribute("value", playerSettings.crossfade, 0)}> <span class="text-sm text-gray-400 w-12">${escape(playerSettings.crossfade)}s</span></div></div>  <div><label for="audio-quality" class="block text-white font-medium mb-2" data-svelte-h="svelte-18eff6t">Audio Quality</label> <select id="audio-quality" class="setting-select svelte-14mlxud"><option value="low" data-svelte-h="svelte-pug4e4">Low (144p)</option><option value="medium" data-svelte-h="svelte-1omx4xs">Medium (360p)</option><option value="high" data-svelte-h="svelte-zbna8k">High (720p)</option><option value="highest" data-svelte-h="svelte-1auisin">Highest Available</option></select></div></div></div> <div class="glass-morphism rounded-2xl p-6"><h3 class="text-lg font-semibold text-white mb-4" data-svelte-h="svelte-tod769">Advanced Settings</h3> <div class="grid md:grid-cols-2 gap-6"> <div><label for="buffer-size" class="block text-white font-medium mb-2" data-svelte-h="svelte-14ek12v">Buffer Size</label> <div class="flex items-center gap-3"><input id="buffer-size" type="range" min="5" max="30" class="flex-1"${add_attribute("value", playerSettings.buffer, 0)}> <span class="text-sm text-gray-400 w-12">${escape(playerSettings.buffer)}s</span></div></div>  <div class="flex items-center justify-between"><div data-svelte-h="svelte-dby82t"><label for="skip-intros" class="text-white font-medium">Skip Intros</label> <p class="text-sm text-gray-400">Automatically skip video intros when detected</p></div> <input id="skip-intros" type="checkbox" class="toggle svelte-14mlxud"${add_attribute("checked", playerSettings.skipIntro, 1)}></div>  <div class="flex items-center justify-between"><div data-svelte-h="svelte-uq2vri"><label for="skip-outros" class="text-white font-medium">Skip Outros</label> <p class="text-sm text-gray-400">Automatically skip video outros when detected</p></div> <input id="skip-outros" type="checkbox" class="toggle svelte-14mlxud"${add_attribute("checked", playerSettings.skipOutro, 1)}></div></div></div></div>`}</div></div>  <div class="p-6 border-t border-white/10 glass-morphism"><div class="flex items-center justify-between"><div class="flex items-center gap-3"><button class="flex items-center gap-2 px-6 py-2 bg-green-500 hover:bg-green-600 rounded-lg text-white transition-colors">${validate_component(Save, "Save").$$render($$result, { class: "w-4 h-4" }, {}, {})}
					Save Changes</button> <button class="flex items-center gap-2 px-4 py-2 bg-red-500/20 hover:bg-red-500/30 border border-red-500/30 rounded-lg text-red-400 hover:text-red-300 transition-colors">${validate_component(Rotate_ccw, "RotateCcw").$$render($$result, { class: "w-4 h-4" }, {}, {})}
					Reset to Defaults</button></div> <div class="text-xs text-gray-500" data-svelte-h="svelte-bd917t">Auto-save enabled • Last saved: Never</div></div></div></div>  ${``}`;
});
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $djammsStore, $$unsubscribe_djammsStore;
  $$unsubscribe_djammsStore = subscribe(djammsStore, (value) => $djammsStore = value);
  const data = void 0;
  let activeTab = "dashboard";
  let openWindows = [];
  getDJAMMSService();
  function openTab(tabName) {
    activeTab = tabName;
  }
  function getStatusDisplay() {
    const status = $djammsStore.playerState.status;
    const connection = $djammsStore.connectionStatus;
    switch (status) {
      case "playing":
        return {
          icon: Circle,
          text: connection === "connected" ? "CONNECTED, PLAYING" : "PLAYING (LOCAL)",
          class: "status-connected-playing"
        };
      case "paused":
        return {
          icon: Circle,
          text: connection === "connected" ? "CONNECTED, PAUSED" : "PAUSED (LOCAL)",
          class: "status-connected-paused"
        };
      case "idle":
        return {
          icon: Wifi_off,
          text: "READY",
          class: "status-disconnected"
        };
      case "stopped":
        return {
          icon: Alert_triangle,
          text: "STOPPED",
          class: "status-error"
        };
      default:
        return {
          icon: Wifi_off,
          text: "NO CONNECTED PLAYER",
          class: "status-disconnected"
        };
    }
  }
  const tabs = [
    {
      id: "dashboard",
      title: "Dashboard",
      icon: Home,
      component: null
    },
    {
      id: "queuemanager",
      title: "Queue Manager",
      description: "Manage current playlist and playback queue",
      icon: List_music,
      gradient: "from-music-purple to-purple-700",
      component: QueueManagerTab
    },
    {
      id: "playlistlibrary",
      title: "Playlist Library",
      description: "Create, edit and organize your playlists",
      icon: Library,
      gradient: "from-music-pink to-pink-700",
      component: PlaylistLibraryTab
    },
    {
      id: "adminconsole",
      title: "Admin Console",
      description: "Configure player settings and preferences",
      icon: Settings,
      gradient: "from-blue-500 to-blue-700",
      component: AdminConsoleTab
    }
  ];
  onDestroy(() => {
  });
  const dashboardCards = [
    {
      id: "videoplayer",
      title: "Start Video Player",
      description: "Open fullscreen YouTube video player window",
      icon: Play,
      path: "/videoplayer",
      gradient: "from-youtube-red to-red-700",
      action: async () => {
      }
    },
    {
      id: "queuemanager",
      title: "Open Queue Manager",
      description: "Manage current playlist and playback queue",
      icon: List_music,
      path: "/queuemanager",
      gradient: "from-music-purple to-purple-700",
      action: () => openTab("queuemanager")
    },
    {
      id: "playlistlibrary",
      title: "Playlist Library",
      description: "Create, edit and organize your playlists",
      icon: Library,
      path: "/playlistlibrary",
      gradient: "from-music-pink to-pink-700",
      action: () => openTab("playlistlibrary")
    },
    {
      id: "adminconsole",
      title: "Admin Console",
      description: "Configure player settings and preferences",
      icon: Settings,
      path: "/adminconsole",
      gradient: "from-blue-500 to-blue-700",
      action: () => openTab("adminconsole")
    }
  ];
  if ($$props.data === void 0 && $$bindings.data && data !== void 0) ;
  $$unsubscribe_djammsStore();
  return `${$$result.head += `<!-- HEAD_svelte-h0z4yt_START -->${$$result.title = `<title>Dashboard - DJAMMS</title>`, ""}<!-- HEAD_svelte-h0z4yt_END -->`, ""} <main class="flex flex-col h-screen bg-gradient-to-br from-youtube-dark via-youtube-darker to-music-purple"> <header class="flex justify-between items-center p-6 glass-morphism border-b border-white/10"><div class="flex items-center gap-4"><div class="w-10 h-10 bg-gradient-to-br from-youtube-red to-music-purple rounded-xl flex items-center justify-center">${validate_component(Play, "Play").$$render($$result, { class: "w-6 h-6 text-white" }, {}, {})}</div> <div><h1 class="text-2xl font-bold text-white" data-svelte-h="svelte-1h6ojot">DJAMMS Dashboard</h1> <p class="text-gray-400 text-sm">Welcome back, ${escape($djammsStore.currentUser?.username || "User")}</p></div></div> <div class="flex items-center gap-4"> ${(() => {
    let statusDisplay = getStatusDisplay();
    return ` <div class="${"status-indicator " + escape(statusDisplay.class, true)}">${validate_component(statusDisplay.icon || missing_component, "svelte:component").$$render($$result, { class: "w-4 h-4" }, {}, {})} <span class="hidden sm:inline">${escape(statusDisplay.text)}</span></div>`;
  })()}  <div class="flex items-center gap-2"><img${add_attribute("src", $djammsStore.currentUser?.avatar_url || `https://ui-avatars.com/api/?name=${encodeURIComponent($djammsStore.currentUser?.username || "User")}&background=7C3AED&color=fff`, 0)} alt="User Avatar" class="w-8 h-8 rounded-full"> <button class="p-2 text-gray-400 hover:text-white hover:bg-white/10 rounded-lg transition-colors" title="Logout">${validate_component(Log_out, "LogOut").$$render($$result, { class: "w-5 h-5" }, {}, {})}</button></div></div></header>  ${activeTab !== "dashboard" ? `<div class="flex items-center justify-between px-6 py-3 bg-black/20 border-b border-white/10"><div class="flex items-center gap-4">${each(tabs, (tab) => {
    return `${tab.id !== "dashboard" ? `<button class="${"flex items-center gap-2 px-4 py-2 rounded-lg transition-colors " + escape(
      activeTab === tab.id ? "bg-white/20 text-white" : "text-gray-400 hover:text-white hover:bg-white/10",
      true
    )}">${validate_component(tab.icon || missing_component, "svelte:component").$$render($$result, { class: "w-4 h-4" }, {}, {})} <span class="hidden sm:inline">${escape(tab.title)}</span> </button>` : ``}`;
  })}</div> <div class="flex items-center gap-2"><button class="flex items-center gap-2 px-3 py-2 text-gray-400 hover:text-white hover:bg-white/10 rounded-lg transition-colors" title="Back to Dashboard">${validate_component(Home, "Home").$$render($$result, { class: "w-4 h-4" }, {}, {})} <span class="hidden sm:inline" data-svelte-h="svelte-detrq4">Dashboard</span></button> <button class="p-2 text-gray-400 hover:text-white hover:bg-white/10 rounded-lg transition-colors" title="Close Tab">${validate_component(X, "X").$$render($$result, { class: "w-4 h-4" }, {}, {})}</button></div></div>` : ``}  <div class="flex-1 overflow-hidden">${activeTab === "dashboard" ? ` <div class="h-full p-6 overflow-auto"><div class="max-w-6xl mx-auto"> <div class="mb-8 text-center" data-svelte-h="svelte-fnipno"><h2 class="text-4xl font-bold text-white mb-4">Your Digital Jukebox</h2> <p class="text-gray-300 text-lg max-w-2xl mx-auto">Choose an interface to start managing your music experience. Use tabs for integrated workflow or open separate windows for multi-screen setups.</p></div>  ${$djammsStore.currentUser ? `${$djammsStore.currentUser.role === "admin" || $djammsStore.currentUser.role === "developer" || $djammsStore.currentUser.is_developer ? `<div class="mb-8 p-4 bg-green-500/20 border border-green-500/30 rounded-xl flex items-center gap-3">${validate_component(Check_circle, "CheckCircle").$$render($$result, { class: "w-6 h-6 text-green-400" }, {}, {})} <div data-svelte-h="svelte-1l5etr8"><h3 class="text-green-400 font-semibold">Full Access Approved</h3> <p class="text-green-300 text-sm">Your account has full DJAMMS access. All features are available.</p></div></div>` : `<div class="mb-8 p-4 bg-blue-500/20 border border-blue-500/30 rounded-xl flex items-center gap-3">${validate_component(Users, "Users").$$render($$result, { class: "w-6 h-6 text-blue-400" }, {}, {})} <div data-svelte-h="svelte-15papbv"><h3 class="text-blue-400 font-semibold">Standard User Access</h3> <p class="text-blue-300 text-sm">You have standard user access to DJAMMS features.</p></div></div>`}` : `<div class="mb-8 p-4 bg-yellow-500/20 border border-yellow-500/30 rounded-xl flex items-center gap-3">${validate_component(Clock, "Clock").$$render(
    $$result,
    {
      class: "w-6 h-6 text-yellow-400 animate-spin"
    },
    {},
    {}
  )} <div data-svelte-h="svelte-a32lq2"><h3 class="text-yellow-400 font-semibold">Loading User Data</h3> <p class="text-yellow-300 text-sm">Loading your user profile and permissions...</p></div></div>`}  <div class="grid md:grid-cols-2 xl:grid-cols-4 gap-6 mb-8">${each(dashboardCards, (card) => {
    return `<div class="group relative overflow-hidden"><button ${!$djammsStore.isAuthenticated ? "disabled" : ""} class="${"w-full p-8 bg-gradient-to-br " + escape(card.gradient, true) + " rounded-2xl text-white text-left transform transition-all duration-300 " + escape(
      $djammsStore.isAuthenticated ? "hover:scale-105 hover:shadow-2xl focus:outline-none focus:ring-4 focus:ring-white/20 cursor-pointer" : "opacity-50 cursor-not-allowed",
      true
    )}"> <div class="absolute inset-0 opacity-10" data-svelte-h="svelte-cbo3wf"><div class="absolute inset-0 bg-white" style="background-image: radial-gradient(circle, rgba(255,255,255,0.1) 2px, transparent 2px); background-size: 20px 20px;"></div></div>  ${!$djammsStore.isAuthenticated ? `<div class="absolute inset-0 bg-black/30 flex items-center justify-center"><div class="flex flex-col items-center gap-2 text-center">${validate_component(Users, "Users").$$render($$result, { class: "w-8 h-8 text-white/60" }, {}, {})} <span class="text-white/80 text-sm font-medium" data-svelte-h="svelte-1mopier">Authentication Required</span></div> </div>` : ``}  <div class="relative z-10"><div class="flex items-center justify-between mb-4"><div class="p-3 bg-white/20 rounded-xl w-fit">${validate_component(card.icon || missing_component, "svelte:component").$$render($$result, { class: "w-8 h-8" }, {}, {})}</div>  ${card.id === "videoplayer" ? `${openWindows.some((w) => w.endpoint === card.path) ? `<div class="flex items-center gap-2 px-3 py-1 bg-green-500/20 border border-green-500/30 rounded-full" data-svelte-h="svelte-1uayjhy"><div class="w-2 h-2 bg-green-500 rounded-full animate-pulse"></div> <span class="text-green-400 text-xs font-medium">OPEN</span> </div>` : ``}` : `<div class="flex items-center gap-2 px-3 py-1 bg-blue-500/20 border border-blue-500/30 rounded-full" data-svelte-h="svelte-pd17py"><span class="text-blue-400 text-xs font-medium">TAB</span> </div>`}</div> <h3 class="text-xl font-bold mb-2">${escape(card.title)}</h3> <p class="text-white/80 text-sm leading-relaxed">${escape(card.description)}</p>  <div class="mt-4 text-xs text-white/60">${$djammsStore.isAuthenticated ? `${card.id === "videoplayer" ? `${openWindows.some((w) => w.endpoint === card.path) ? `Click to focus existing window` : `Click to open new window`}` : `Click to open as tab`}` : `Sign in to access this feature`}</div>  ${$djammsStore.isAuthenticated ? `<div class="absolute bottom-4 right-4 opacity-0 group-hover:opacity-100 transition-opacity">${card.id === "videoplayer" ? `<svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path></svg>` : `<svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path></svg>`} </div>` : ``} </div></button> </div>`;
  })}</div>  <div class="glass-morphism rounded-2xl p-6"><h3 class="text-xl font-semibold text-white mb-4" data-svelte-h="svelte-1hq0m1d">Quick Actions</h3> <div class="grid md:grid-cols-3 gap-4"><button class="p-4 bg-white/5 hover:bg-white/10 rounded-xl border border-white/10 text-left transition-colors" data-svelte-h="svelte-vkb5w4"><h4 class="text-white font-medium mb-1">Create New Playlist</h4> <p class="text-gray-400 text-sm">Start building your music collection</p></button> <button class="p-4 bg-white/5 hover:bg-white/10 rounded-xl border border-white/10 text-left transition-colors" data-svelte-h="svelte-1mpi1j8"><h4 class="text-white font-medium mb-1">Import Playlist</h4> <p class="text-gray-400 text-sm">Import from YouTube or other sources</p></button> <button class="p-4 bg-white/5 hover:bg-white/10 rounded-xl border border-white/10 text-left transition-colors" data-svelte-h="svelte-1hir4rw"><h4 class="text-white font-medium mb-1">Backup Settings</h4> <p class="text-gray-400 text-sm">Save your configuration</p></button></div></div></div></div>  <footer class="p-4 border-t border-white/10 text-center" data-svelte-h="svelte-5oaqxz"><p class="text-gray-500 text-sm">DJAMMS v2.0 • Integrated Tabbed Interface</p></footer>` : ` <div class="h-full">${activeTab === "queuemanager" ? `${validate_component(QueueManagerTab, "QueueManagerTab").$$render($$result, {}, {}, {})}` : `${activeTab === "playlistlibrary" ? `${validate_component(PlaylistLibraryTab, "PlaylistLibraryTab").$$render($$result, {}, {}, {})}` : `${activeTab === "adminconsole" ? `${validate_component(AdminConsoleTab, "AdminConsoleTab").$$render($$result, {}, {}, {})}` : ``}`}`}</div>`}</div></main>`;
});
export {
  Page as default
};
